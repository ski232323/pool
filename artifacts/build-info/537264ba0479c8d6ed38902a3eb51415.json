{
	"id": "537264ba0479c8d6ed38902a3eb51415",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"pool.sol": {
				"content": "\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract RewardPool is Ownable {\r\n    IERC20 public stakeToken;\r\n    IERC20 public rewardToken;\r\n\r\n    uint256 public rewardRate = 1e18; // 1 EURC par seconde (par token stakÃ©)\r\n\r\n    struct Staker {\r\n        uint256 balance;\r\n        uint256 rewardDebt;\r\n        uint256 lastUpdate;\r\n    }\r\n\r\n    mapping(address => Staker) public stakers;\r\n\r\n    constructor(address _stakeToken, address _rewardToken) Ownable(msg.sender) {\r\n        stakeToken = IERC20(_stakeToken);\r\n        rewardToken = IERC20(_rewardToken);\r\n    }\r\n\r\n    function deposit(uint256 amount) external {\r\n        require(amount > 0, \"Zero deposit\");\r\n        _updateRewards(msg.sender);\r\n        stakeToken.transferFrom(msg.sender, address(this), amount);\r\n        stakers[msg.sender].balance += amount;\r\n    }\r\n\r\n    function withdraw(uint256 amount) external {\r\n        require(stakers[msg.sender].balance >= amount, \"Not enough staked\");\r\n        _updateRewards(msg.sender);\r\n        stakers[msg.sender].balance -= amount;\r\n        stakeToken.transfer(msg.sender, amount);\r\n    }\r\n\r\n    function claimRewards() external {\r\n        _updateRewards(msg.sender);\r\n        uint256 reward = stakers[msg.sender].rewardDebt;\r\n        require(reward > 0, \"No rewards\");\r\n        stakers[msg.sender].rewardDebt = 0;\r\n        rewardToken.transfer(msg.sender, reward);\r\n    }\r\n\r\n    function _updateRewards(address user) internal {\r\n        Staker storage s = stakers[user];\r\n        if (s.lastUpdate > 0) {\r\n            uint256 timeDiff = block.timestamp - s.lastUpdate;\r\n            uint256 reward = timeDiff * s.balance * rewardRate / 1e18;\r\n            s.rewardDebt += reward;\r\n        }\r\n        s.lastUpdate = block.timestamp;\r\n    }\r\n\r\n    function fundRewards(uint256 amount) external onlyOwner {\r\n        rewardToken.transferFrom(msg.sender, address(this), amount);\r\n    }\r\n\r\n    function setRewardRate(uint256 _rate) external onlyOwner {\r\n        rewardRate = _rate;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"pool.sol": {
				"RewardPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakeToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "fundRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								}
							],
							"name": "setRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastUpdate",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"pool.sol\":177:2122  contract RewardPool is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"pool.sol\":308:312  1e18 */\n  0x0de0b6b3a7640000\n    /* \"pool.sol\":280:312  uint256 public rewardRate = 1e18 */\n  0x03\n  sstore\n    /* \"pool.sol\":526:697  constructor(address _stakeToken, address _rewardToken) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"pool.sol\":589:599  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"pool.sol\":632:643  _stakeToken */\n  dup2\n    /* \"pool.sol\":612:622  stakeToken */\n  0x01\n  0x00\n    /* \"pool.sol\":612:644  stakeToken = IERC20(_stakeToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"pool.sol\":676:688  _rewardToken */\n  dup1\n    /* \"pool.sol\":655:666  rewardToken */\n  0x02\n  0x00\n    /* \"pool.sol\":655:689  rewardToken = IERC20(_rewardToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"pool.sol\":526:697  constructor(address _stakeToken, address _rewardToken) Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \"pool.sol\":177:2122  contract RewardPool is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  0x00\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":949:1068   */\ntag_36:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_38\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_39\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_22:\n    /* \"#utility.yul\":1445:1469   */\n  tag_41\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_19\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_9:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_43\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"pool.sol\":177:2122  contract RewardPool is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"pool.sol\":177:2122  contract RewardPool is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9168ae72\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x9168ae72\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x93707a19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9e447fc6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x372500ab\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x51ed6a30\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7b0a47ee\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"pool.sol\":963:1227  function withdraw(uint256 amount) external {... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"pool.sol\":1235:1511  function claimRewards() external {... */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"pool.sol\":215:239  IERC20 public stakeToken */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      stop\n        /* \"pool.sol\":280:312  uint256 public rewardRate = 1e18 */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"pool.sol\":476:517  mapping(address => Staker) public stakers */\n    tag_9:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"pool.sol\":1883:2017  function fundRewards(uint256 amount) external onlyOwner {... */\n    tag_10:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"pool.sol\":2025:2119  function setRewardRate(uint256 _rate) external onlyOwner {... */\n    tag_11:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"pool.sol\":705:955  function deposit(uint256 amount) external {... */\n    tag_12:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"pool.sol\":246:271  IERC20 public rewardToken */\n    tag_14:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"pool.sol\":963:1227  function withdraw(uint256 amount) external {... */\n    tag_19:\n        /* \"pool.sol\":1056:1062  amount */\n      dup1\n        /* \"pool.sol\":1025:1032  stakers */\n      0x04\n        /* \"pool.sol\":1025:1044  stakers[msg.sender] */\n      0x00\n        /* \"pool.sol\":1033:1043  msg.sender */\n      caller\n        /* \"pool.sol\":1025:1044  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"pool.sol\":1025:1052  stakers[msg.sender].balance */\n      0x00\n      add\n      sload\n        /* \"pool.sol\":1025:1062  stakers[msg.sender].balance >= amount */\n      lt\n      iszero\n        /* \"pool.sol\":1017:1084  require(stakers[msg.sender].balance >= amount, \"Not enough staked\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"pool.sol\":1095:1121  _updateRewards(msg.sender) */\n      tag_61\n        /* \"pool.sol\":1110:1120  msg.sender */\n      caller\n        /* \"pool.sol\":1095:1109  _updateRewards */\n      tag_62\n        /* \"pool.sol\":1095:1121  _updateRewards(msg.sender) */\n      jump\t// in\n    tag_61:\n        /* \"pool.sol\":1163:1169  amount */\n      dup1\n        /* \"pool.sol\":1132:1139  stakers */\n      0x04\n        /* \"pool.sol\":1132:1151  stakers[msg.sender] */\n      0x00\n        /* \"pool.sol\":1140:1150  msg.sender */\n      caller\n        /* \"pool.sol\":1132:1151  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"pool.sol\":1132:1159  stakers[msg.sender].balance */\n      0x00\n      add\n      0x00\n        /* \"pool.sol\":1132:1169  stakers[msg.sender].balance -= amount */\n      dup3\n      dup3\n      sload\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"pool.sol\":1180:1190  stakeToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"pool.sol\":1180:1199  stakeToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"pool.sol\":1200:1210  msg.sender */\n      caller\n        /* \"pool.sol\":1212:1218  amount */\n      dup4\n        /* \"pool.sol\":1180:1219  stakeToken.transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      pop\n        /* \"pool.sol\":963:1227  function withdraw(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"pool.sol\":1235:1511  function claimRewards() external {... */\n    tag_21:\n        /* \"pool.sol\":1279:1305  _updateRewards(msg.sender) */\n      tag_72\n        /* \"pool.sol\":1294:1304  msg.sender */\n      caller\n        /* \"pool.sol\":1279:1293  _updateRewards */\n      tag_62\n        /* \"pool.sol\":1279:1305  _updateRewards(msg.sender) */\n      jump\t// in\n    tag_72:\n        /* \"pool.sol\":1316:1330  uint256 reward */\n      0x00\n        /* \"pool.sol\":1333:1340  stakers */\n      0x04\n        /* \"pool.sol\":1333:1352  stakers[msg.sender] */\n      0x00\n        /* \"pool.sol\":1341:1351  msg.sender */\n      caller\n        /* \"pool.sol\":1333:1352  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"pool.sol\":1333:1363  stakers[msg.sender].rewardDebt */\n      0x01\n      add\n      sload\n        /* \"pool.sol\":1316:1363  uint256 reward = stakers[msg.sender].rewardDebt */\n      swap1\n      pop\n        /* \"pool.sol\":1391:1392  0 */\n      0x00\n        /* \"pool.sol\":1382:1388  reward */\n      dup2\n        /* \"pool.sol\":1382:1392  reward > 0 */\n      gt\n        /* \"pool.sol\":1374:1407  require(reward > 0, \"No rewards\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"pool.sol\":1451:1452  0 */\n      0x00\n        /* \"pool.sol\":1418:1425  stakers */\n      0x04\n        /* \"pool.sol\":1418:1437  stakers[msg.sender] */\n      0x00\n        /* \"pool.sol\":1426:1436  msg.sender */\n      caller\n        /* \"pool.sol\":1418:1437  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"pool.sol\":1418:1448  stakers[msg.sender].rewardDebt */\n      0x01\n      add\n        /* \"pool.sol\":1418:1452  stakers[msg.sender].rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"pool.sol\":1463:1474  rewardToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"pool.sol\":1463:1483  rewardToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"pool.sol\":1484:1494  msg.sender */\n      caller\n        /* \"pool.sol\":1496:1502  reward */\n      dup4\n        /* \"pool.sol\":1463:1503  rewardToken.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_76:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_79:\n      pop\n        /* \"pool.sol\":1268:1511  {... */\n      pop\n        /* \"pool.sol\":1235:1511  function claimRewards() external {... */\n      jump\t// out\n        /* \"pool.sol\":215:239  IERC20 public stakeToken */\n    tag_23:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"pool.sol\":280:312  uint256 public rewardRate = 1e18 */\n    tag_29:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"pool.sol\":476:517  mapping(address => Staker) public stakers */\n    tag_39:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"pool.sol\":1883:2017  function fundRewards(uint256 amount) external onlyOwner {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_88:\n        /* \"pool.sol\":1950:1961  rewardToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"pool.sol\":1950:1974  rewardToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"pool.sol\":1975:1985  msg.sender */\n      caller\n        /* \"pool.sol\":1995:1999  this */\n      address\n        /* \"pool.sol\":2002:2008  amount */\n      dup5\n        /* \"pool.sol\":1950:2009  rewardToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_94:\n      pop\n        /* \"pool.sol\":1883:2017  function fundRewards(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"pool.sol\":2025:2119  function setRewardRate(uint256 _rate) external onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_96:\n        /* \"pool.sol\":2106:2111  _rate */\n      dup1\n        /* \"pool.sol\":2093:2103  rewardRate */\n      0x03\n        /* \"pool.sol\":2093:2111  rewardRate = _rate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"pool.sol\":2025:2119  function setRewardRate(uint256 _rate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"pool.sol\":705:955  function deposit(uint256 amount) external {... */\n    tag_50:\n        /* \"pool.sol\":775:776  0 */\n      0x00\n        /* \"pool.sol\":766:772  amount */\n      dup2\n        /* \"pool.sol\":766:776  amount > 0 */\n      gt\n        /* \"pool.sol\":758:793  require(amount > 0, \"Zero deposit\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"pool.sol\":804:830  _updateRewards(msg.sender) */\n      tag_102\n        /* \"pool.sol\":819:829  msg.sender */\n      caller\n        /* \"pool.sol\":804:818  _updateRewards */\n      tag_62\n        /* \"pool.sol\":804:830  _updateRewards(msg.sender) */\n      jump\t// in\n    tag_102:\n        /* \"pool.sol\":841:851  stakeToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"pool.sol\":841:864  stakeToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"pool.sol\":865:875  msg.sender */\n      caller\n        /* \"pool.sol\":885:889  this */\n      address\n        /* \"pool.sol\":892:898  amount */\n      dup5\n        /* \"pool.sol\":841:899  stakeToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_103:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_106:\n      pop\n        /* \"pool.sol\":941:947  amount */\n      dup1\n        /* \"pool.sol\":910:917  stakers */\n      0x04\n        /* \"pool.sol\":910:929  stakers[msg.sender] */\n      0x00\n        /* \"pool.sol\":918:928  msg.sender */\n      caller\n        /* \"pool.sol\":910:929  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"pool.sol\":910:937  stakers[msg.sender].balance */\n      0x00\n      add\n      0x00\n        /* \"pool.sol\":910:947  stakers[msg.sender].balance += amount */\n      dup3\n      dup3\n      sload\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"pool.sol\":705:955  function deposit(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"pool.sol\":246:271  IERC20 public rewardToken */\n    tag_55:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"pool.sol\":1519:1875  function _updateRewards(address user) internal {... */\n    tag_62:\n        /* \"pool.sol\":1577:1593  Staker storage s */\n      0x00\n        /* \"pool.sol\":1596:1603  stakers */\n      0x04\n        /* \"pool.sol\":1596:1609  stakers[user] */\n      0x00\n        /* \"pool.sol\":1604:1608  user */\n      dup4\n        /* \"pool.sol\":1596:1609  stakers[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"pool.sol\":1577:1609  Staker storage s = stakers[user] */\n      swap1\n      pop\n        /* \"pool.sol\":1639:1640  0 */\n      0x00\n        /* \"pool.sol\":1624:1625  s */\n      dup2\n        /* \"pool.sol\":1624:1636  s.lastUpdate */\n      0x02\n      add\n      sload\n        /* \"pool.sol\":1624:1640  s.lastUpdate > 0 */\n      gt\n        /* \"pool.sol\":1620:1827  if (s.lastUpdate > 0) {... */\n      iszero\n      tag_116\n      jumpi\n        /* \"pool.sol\":1657:1673  uint256 timeDiff */\n      0x00\n        /* \"pool.sol\":1694:1695  s */\n      dup2\n        /* \"pool.sol\":1694:1706  s.lastUpdate */\n      0x02\n      add\n      sload\n        /* \"pool.sol\":1676:1691  block.timestamp */\n      timestamp\n        /* \"pool.sol\":1676:1706  block.timestamp - s.lastUpdate */\n      tag_117\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_117:\n        /* \"pool.sol\":1657:1706  uint256 timeDiff = block.timestamp - s.lastUpdate */\n      swap1\n      pop\n        /* \"pool.sol\":1721:1735  uint256 reward */\n      0x00\n        /* \"pool.sol\":1774:1778  1e18 */\n      0x0de0b6b3a7640000\n        /* \"pool.sol\":1761:1771  rewardRate */\n      sload(0x03)\n        /* \"pool.sol\":1749:1750  s */\n      dup5\n        /* \"pool.sol\":1749:1758  s.balance */\n      0x00\n      add\n      sload\n        /* \"pool.sol\":1738:1746  timeDiff */\n      dup5\n        /* \"pool.sol\":1738:1758  timeDiff * s.balance */\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"pool.sol\":1738:1771  timeDiff * s.balance * rewardRate */\n      tag_120\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_120:\n        /* \"pool.sol\":1738:1778  timeDiff * s.balance * rewardRate / 1e18 */\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"pool.sol\":1721:1778  uint256 reward = timeDiff * s.balance * rewardRate / 1e18 */\n      swap1\n      pop\n        /* \"pool.sol\":1809:1815  reward */\n      dup1\n        /* \"pool.sol\":1793:1794  s */\n      dup4\n        /* \"pool.sol\":1793:1805  s.rewardDebt */\n      0x01\n      add\n      0x00\n        /* \"pool.sol\":1793:1815  s.rewardDebt += reward */\n      dup3\n      dup3\n      sload\n      tag_123\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_123:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"pool.sol\":1642:1827  {... */\n      pop\n      pop\n        /* \"pool.sol\":1620:1827  if (s.lastUpdate > 0) {... */\n    tag_116:\n        /* \"pool.sol\":1852:1867  block.timestamp */\n      timestamp\n        /* \"pool.sol\":1837:1838  s */\n      dup2\n        /* \"pool.sol\":1837:1849  s.lastUpdate */\n      0x02\n      add\n        /* \"pool.sol\":1837:1867  s.lastUpdate = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"pool.sol\":1566:1875  {... */\n      pop\n        /* \"pool.sol\":1519:1875  function _updateRewards(address user) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_33\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_134:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_136:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_137:\n        /* \"#utility.yul\":490:514   */\n      tag_168\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_136\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_169:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_138:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_171\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_137\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_18:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_174\n      tag_134\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":766:885   */\n    tag_173:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_175\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_138\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_139:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1217   */\n    tag_140:\n        /* \"#utility.yul\":1185:1188   */\n      0x00\n        /* \"#utility.yul\":1206:1211   */\n      dup2\n        /* \"#utility.yul\":1199:1211   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1223:1365   */\n    tag_141:\n        /* \"#utility.yul\":1273:1282   */\n      0x00\n        /* \"#utility.yul\":1306:1359   */\n      tag_179\n        /* \"#utility.yul\":1324:1358   */\n      tag_180\n        /* \"#utility.yul\":1333:1357   */\n      tag_181\n        /* \"#utility.yul\":1351:1356   */\n      dup5\n        /* \"#utility.yul\":1333:1357   */\n      tag_139\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1324:1358   */\n      tag_140\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":1306:1359   */\n      tag_139\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":1293:1359   */\n      swap1\n      pop\n        /* \"#utility.yul\":1223:1365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1371:1497   */\n    tag_142:\n        /* \"#utility.yul\":1421:1430   */\n      0x00\n        /* \"#utility.yul\":1454:1491   */\n      tag_183\n        /* \"#utility.yul\":1485:1490   */\n      dup3\n        /* \"#utility.yul\":1454:1491   */\n      tag_141\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":1441:1491   */\n      swap1\n      pop\n        /* \"#utility.yul\":1371:1497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1503:1643   */\n    tag_143:\n        /* \"#utility.yul\":1567:1576   */\n      0x00\n        /* \"#utility.yul\":1600:1637   */\n      tag_185\n        /* \"#utility.yul\":1631:1636   */\n      dup3\n        /* \"#utility.yul\":1600:1637   */\n      tag_142\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1587:1637   */\n      swap1\n      pop\n        /* \"#utility.yul\":1503:1643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1649:1808   */\n    tag_144:\n        /* \"#utility.yul\":1750:1801   */\n      tag_187\n        /* \"#utility.yul\":1795:1800   */\n      dup2\n        /* \"#utility.yul\":1750:1801   */\n      tag_143\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1745:1748   */\n      dup3\n        /* \"#utility.yul\":1738:1802   */\n      mstore\n        /* \"#utility.yul\":1649:1808   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1814:2064   */\n    tag_25:\n        /* \"#utility.yul\":1921:1925   */\n      0x00\n        /* \"#utility.yul\":1959:1961   */\n      0x20\n        /* \"#utility.yul\":1948:1957   */\n      dup3\n        /* \"#utility.yul\":1944:1962   */\n      add\n        /* \"#utility.yul\":1936:1962   */\n      swap1\n      pop\n        /* \"#utility.yul\":1972:2057   */\n      tag_189\n        /* \"#utility.yul\":2054:2055   */\n      0x00\n        /* \"#utility.yul\":2043:2052   */\n      dup4\n        /* \"#utility.yul\":2039:2056   */\n      add\n        /* \"#utility.yul\":2030:2036   */\n      dup5\n        /* \"#utility.yul\":1972:2057   */\n      tag_144\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1814:2064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2070:2188   */\n    tag_145:\n        /* \"#utility.yul\":2157:2181   */\n      tag_191\n        /* \"#utility.yul\":2175:2180   */\n      dup2\n        /* \"#utility.yul\":2157:2181   */\n      tag_136\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":2152:2155   */\n      dup3\n        /* \"#utility.yul\":2145:2182   */\n      mstore\n        /* \"#utility.yul\":2070:2188   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2194:2416   */\n    tag_31:\n        /* \"#utility.yul\":2287:2291   */\n      0x00\n        /* \"#utility.yul\":2325:2327   */\n      0x20\n        /* \"#utility.yul\":2314:2323   */\n      dup3\n        /* \"#utility.yul\":2310:2328   */\n      add\n        /* \"#utility.yul\":2302:2328   */\n      swap1\n      pop\n        /* \"#utility.yul\":2338:2409   */\n      tag_193\n        /* \"#utility.yul\":2406:2407   */\n      0x00\n        /* \"#utility.yul\":2395:2404   */\n      dup4\n        /* \"#utility.yul\":2391:2408   */\n      add\n        /* \"#utility.yul\":2382:2388   */\n      dup5\n        /* \"#utility.yul\":2338:2409   */\n      tag_145\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":2194:2416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2422:2518   */\n    tag_146:\n        /* \"#utility.yul\":2459:2466   */\n      0x00\n        /* \"#utility.yul\":2488:2512   */\n      tag_195\n        /* \"#utility.yul\":2506:2511   */\n      dup3\n        /* \"#utility.yul\":2488:2512   */\n      tag_139\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2477:2512   */\n      swap1\n      pop\n        /* \"#utility.yul\":2422:2518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:2642   */\n    tag_147:\n        /* \"#utility.yul\":2611:2635   */\n      tag_197\n        /* \"#utility.yul\":2629:2634   */\n      dup2\n        /* \"#utility.yul\":2611:2635   */\n      tag_146\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2606:2609   */\n      dup3\n        /* \"#utility.yul\":2599:2636   */\n      mstore\n        /* \"#utility.yul\":2524:2642   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2648:2870   */\n    tag_35:\n        /* \"#utility.yul\":2741:2745   */\n      0x00\n        /* \"#utility.yul\":2779:2781   */\n      0x20\n        /* \"#utility.yul\":2768:2777   */\n      dup3\n        /* \"#utility.yul\":2764:2782   */\n      add\n        /* \"#utility.yul\":2756:2782   */\n      swap1\n      pop\n        /* \"#utility.yul\":2792:2863   */\n      tag_199\n        /* \"#utility.yul\":2860:2861   */\n      0x00\n        /* \"#utility.yul\":2849:2858   */\n      dup4\n        /* \"#utility.yul\":2845:2862   */\n      add\n        /* \"#utility.yul\":2836:2842   */\n      dup5\n        /* \"#utility.yul\":2792:2863   */\n      tag_147\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2648:2870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2876:2998   */\n    tag_148:\n        /* \"#utility.yul\":2949:2973   */\n      tag_201\n        /* \"#utility.yul\":2967:2972   */\n      dup2\n        /* \"#utility.yul\":2949:2973   */\n      tag_146\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2942:2947   */\n      dup2\n        /* \"#utility.yul\":2939:2974   */\n      eq\n        /* \"#utility.yul\":2929:2992   */\n      tag_202\n      jumpi\n        /* \"#utility.yul\":2988:2989   */\n      0x00\n        /* \"#utility.yul\":2985:2986   */\n      0x00\n        /* \"#utility.yul\":2978:2990   */\n      revert\n        /* \"#utility.yul\":2929:2992   */\n    tag_202:\n        /* \"#utility.yul\":2876:2998   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3004:3143   */\n    tag_149:\n        /* \"#utility.yul\":3050:3055   */\n      0x00\n        /* \"#utility.yul\":3088:3094   */\n      dup2\n        /* \"#utility.yul\":3075:3095   */\n      calldataload\n        /* \"#utility.yul\":3066:3095   */\n      swap1\n      pop\n        /* \"#utility.yul\":3104:3137   */\n      tag_204\n        /* \"#utility.yul\":3131:3136   */\n      dup2\n        /* \"#utility.yul\":3104:3137   */\n      tag_148\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":3004:3143   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3149:3478   */\n    tag_38:\n        /* \"#utility.yul\":3208:3214   */\n      0x00\n        /* \"#utility.yul\":3257:3259   */\n      0x20\n        /* \"#utility.yul\":3245:3254   */\n      dup3\n        /* \"#utility.yul\":3236:3243   */\n      dup5\n        /* \"#utility.yul\":3232:3255   */\n      sub\n        /* \"#utility.yul\":3228:3260   */\n      slt\n        /* \"#utility.yul\":3225:3344   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":3263:3342   */\n      tag_207\n      tag_134\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3225:3344   */\n    tag_206:\n        /* \"#utility.yul\":3383:3384   */\n      0x00\n        /* \"#utility.yul\":3408:3461   */\n      tag_208\n        /* \"#utility.yul\":3453:3460   */\n      dup5\n        /* \"#utility.yul\":3444:3450   */\n      dup3\n        /* \"#utility.yul\":3433:3442   */\n      dup6\n        /* \"#utility.yul\":3429:3451   */\n      add\n        /* \"#utility.yul\":3408:3461   */\n      tag_149\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":3398:3461   */\n      swap2\n      pop\n        /* \"#utility.yul\":3354:3471   */\n      pop\n        /* \"#utility.yul\":3149:3478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3484:3926   */\n    tag_41:\n        /* \"#utility.yul\":3633:3637   */\n      0x00\n        /* \"#utility.yul\":3671:3673   */\n      0x60\n        /* \"#utility.yul\":3660:3669   */\n      dup3\n        /* \"#utility.yul\":3656:3674   */\n      add\n        /* \"#utility.yul\":3648:3674   */\n      swap1\n      pop\n        /* \"#utility.yul\":3684:3755   */\n      tag_210\n        /* \"#utility.yul\":3752:3753   */\n      0x00\n        /* \"#utility.yul\":3741:3750   */\n      dup4\n        /* \"#utility.yul\":3737:3754   */\n      add\n        /* \"#utility.yul\":3728:3734   */\n      dup7\n        /* \"#utility.yul\":3684:3755   */\n      tag_145\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":3765:3837   */\n      tag_211\n        /* \"#utility.yul\":3833:3835   */\n      0x20\n        /* \"#utility.yul\":3822:3831   */\n      dup4\n        /* \"#utility.yul\":3818:3836   */\n      add\n        /* \"#utility.yul\":3809:3815   */\n      dup6\n        /* \"#utility.yul\":3765:3837   */\n      tag_145\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3847:3919   */\n      tag_212\n        /* \"#utility.yul\":3915:3917   */\n      0x40\n        /* \"#utility.yul\":3904:3913   */\n      dup4\n        /* \"#utility.yul\":3900:3918   */\n      add\n        /* \"#utility.yul\":3891:3897   */\n      dup5\n        /* \"#utility.yul\":3847:3919   */\n      tag_145\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":3484:3926   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3932:4101   */\n    tag_150:\n        /* \"#utility.yul\":4016:4027   */\n      0x00\n        /* \"#utility.yul\":4050:4056   */\n      dup3\n        /* \"#utility.yul\":4045:4048   */\n      dup3\n        /* \"#utility.yul\":4038:4057   */\n      mstore\n        /* \"#utility.yul\":4090:4094   */\n      0x20\n        /* \"#utility.yul\":4085:4088   */\n      dup3\n        /* \"#utility.yul\":4081:4095   */\n      add\n        /* \"#utility.yul\":4066:4095   */\n      swap1\n      pop\n        /* \"#utility.yul\":3932:4101   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4107:4274   */\n    tag_151:\n        /* \"#utility.yul\":4247:4266   */\n      0x4e6f7420656e6f756768207374616b6564000000000000000000000000000000\n        /* \"#utility.yul\":4243:4244   */\n      0x00\n        /* \"#utility.yul\":4235:4241   */\n      dup3\n        /* \"#utility.yul\":4231:4245   */\n      add\n        /* \"#utility.yul\":4224:4267   */\n      mstore\n        /* \"#utility.yul\":4107:4274   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4280:4646   */\n    tag_152:\n        /* \"#utility.yul\":4422:4425   */\n      0x00\n        /* \"#utility.yul\":4443:4510   */\n      tag_216\n        /* \"#utility.yul\":4507:4509   */\n      0x11\n        /* \"#utility.yul\":4502:4505   */\n      dup4\n        /* \"#utility.yul\":4443:4510   */\n      tag_150\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4436:4510   */\n      swap2\n      pop\n        /* \"#utility.yul\":4519:4612   */\n      tag_217\n        /* \"#utility.yul\":4608:4611   */\n      dup3\n        /* \"#utility.yul\":4519:4612   */\n      tag_151\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4637:4639   */\n      0x20\n        /* \"#utility.yul\":4632:4635   */\n      dup3\n        /* \"#utility.yul\":4628:4640   */\n      add\n        /* \"#utility.yul\":4621:4640   */\n      swap1\n      pop\n        /* \"#utility.yul\":4280:4646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4652:5071   */\n    tag_60:\n        /* \"#utility.yul\":4818:4822   */\n      0x00\n        /* \"#utility.yul\":4856:4858   */\n      0x20\n        /* \"#utility.yul\":4845:4854   */\n      dup3\n        /* \"#utility.yul\":4841:4859   */\n      add\n        /* \"#utility.yul\":4833:4859   */\n      swap1\n      pop\n        /* \"#utility.yul\":4905:4914   */\n      dup2\n        /* \"#utility.yul\":4899:4903   */\n      dup2\n        /* \"#utility.yul\":4895:4915   */\n      sub\n        /* \"#utility.yul\":4891:4892   */\n      0x00\n        /* \"#utility.yul\":4880:4889   */\n      dup4\n        /* \"#utility.yul\":4876:4893   */\n      add\n        /* \"#utility.yul\":4869:4916   */\n      mstore\n        /* \"#utility.yul\":4933:5064   */\n      tag_219\n        /* \"#utility.yul\":5059:5063   */\n      dup2\n        /* \"#utility.yul\":4933:5064   */\n      tag_152\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":4925:5064   */\n      swap1\n      pop\n        /* \"#utility.yul\":4652:5071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5077:5257   */\n    tag_153:\n        /* \"#utility.yul\":5125:5202   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5122:5123   */\n      0x00\n        /* \"#utility.yul\":5115:5203   */\n      mstore\n        /* \"#utility.yul\":5222:5226   */\n      0x11\n        /* \"#utility.yul\":5219:5220   */\n      0x04\n        /* \"#utility.yul\":5212:5227   */\n      mstore\n        /* \"#utility.yul\":5246:5250   */\n      0x24\n        /* \"#utility.yul\":5243:5244   */\n      0x00\n        /* \"#utility.yul\":5236:5251   */\n      revert\n        /* \"#utility.yul\":5263:5457   */\n    tag_64:\n        /* \"#utility.yul\":5303:5307   */\n      0x00\n        /* \"#utility.yul\":5323:5343   */\n      tag_222\n        /* \"#utility.yul\":5341:5342   */\n      dup3\n        /* \"#utility.yul\":5323:5343   */\n      tag_136\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":5318:5343   */\n      swap2\n      pop\n        /* \"#utility.yul\":5357:5377   */\n      tag_223\n        /* \"#utility.yul\":5375:5376   */\n      dup4\n        /* \"#utility.yul\":5357:5377   */\n      tag_136\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":5352:5377   */\n      swap3\n      pop\n        /* \"#utility.yul\":5401:5402   */\n      dup3\n        /* \"#utility.yul\":5398:5399   */\n      dup3\n        /* \"#utility.yul\":5394:5403   */\n      sub\n        /* \"#utility.yul\":5386:5403   */\n      swap1\n      pop\n        /* \"#utility.yul\":5425:5426   */\n      dup2\n        /* \"#utility.yul\":5419:5423   */\n      dup2\n        /* \"#utility.yul\":5416:5427   */\n      gt\n        /* \"#utility.yul\":5413:5450   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":5430:5448   */\n      tag_225\n      tag_153\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":5413:5450   */\n    tag_224:\n        /* \"#utility.yul\":5263:5457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5463:5795   */\n    tag_66:\n        /* \"#utility.yul\":5584:5588   */\n      0x00\n        /* \"#utility.yul\":5622:5624   */\n      0x40\n        /* \"#utility.yul\":5611:5620   */\n      dup3\n        /* \"#utility.yul\":5607:5625   */\n      add\n        /* \"#utility.yul\":5599:5625   */\n      swap1\n      pop\n        /* \"#utility.yul\":5635:5706   */\n      tag_227\n        /* \"#utility.yul\":5703:5704   */\n      0x00\n        /* \"#utility.yul\":5692:5701   */\n      dup4\n        /* \"#utility.yul\":5688:5705   */\n      add\n        /* \"#utility.yul\":5679:5685   */\n      dup6\n        /* \"#utility.yul\":5635:5706   */\n      tag_147\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5716:5788   */\n      tag_228\n        /* \"#utility.yul\":5784:5786   */\n      0x20\n        /* \"#utility.yul\":5773:5782   */\n      dup4\n        /* \"#utility.yul\":5769:5787   */\n      add\n        /* \"#utility.yul\":5760:5766   */\n      dup5\n        /* \"#utility.yul\":5716:5788   */\n      tag_145\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5463:5795   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5801:5891   */\n    tag_154:\n        /* \"#utility.yul\":5835:5842   */\n      0x00\n        /* \"#utility.yul\":5878:5883   */\n      dup2\n        /* \"#utility.yul\":5871:5884   */\n      iszero\n        /* \"#utility.yul\":5864:5885   */\n      iszero\n        /* \"#utility.yul\":5853:5885   */\n      swap1\n      pop\n        /* \"#utility.yul\":5801:5891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5897:6013   */\n    tag_155:\n        /* \"#utility.yul\":5967:5988   */\n      tag_231\n        /* \"#utility.yul\":5982:5987   */\n      dup2\n        /* \"#utility.yul\":5967:5988   */\n      tag_154\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":5960:5965   */\n      dup2\n        /* \"#utility.yul\":5957:5989   */\n      eq\n        /* \"#utility.yul\":5947:6007   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":6003:6004   */\n      0x00\n        /* \"#utility.yul\":6000:6001   */\n      0x00\n        /* \"#utility.yul\":5993:6005   */\n      revert\n        /* \"#utility.yul\":5947:6007   */\n    tag_232:\n        /* \"#utility.yul\":5897:6013   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6019:6156   */\n    tag_156:\n        /* \"#utility.yul\":6073:6078   */\n      0x00\n        /* \"#utility.yul\":6104:6110   */\n      dup2\n        /* \"#utility.yul\":6098:6111   */\n      mload\n        /* \"#utility.yul\":6089:6111   */\n      swap1\n      pop\n        /* \"#utility.yul\":6120:6150   */\n      tag_234\n        /* \"#utility.yul\":6144:6149   */\n      dup2\n        /* \"#utility.yul\":6120:6150   */\n      tag_155\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":6019:6156   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6162:6507   */\n    tag_70:\n        /* \"#utility.yul\":6229:6235   */\n      0x00\n        /* \"#utility.yul\":6278:6280   */\n      0x20\n        /* \"#utility.yul\":6266:6275   */\n      dup3\n        /* \"#utility.yul\":6257:6264   */\n      dup5\n        /* \"#utility.yul\":6253:6276   */\n      sub\n        /* \"#utility.yul\":6249:6281   */\n      slt\n        /* \"#utility.yul\":6246:6365   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":6284:6363   */\n      tag_237\n      tag_134\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":6246:6365   */\n    tag_236:\n        /* \"#utility.yul\":6404:6405   */\n      0x00\n        /* \"#utility.yul\":6429:6490   */\n      tag_238\n        /* \"#utility.yul\":6482:6489   */\n      dup5\n        /* \"#utility.yul\":6473:6479   */\n      dup3\n        /* \"#utility.yul\":6462:6471   */\n      dup6\n        /* \"#utility.yul\":6458:6480   */\n      add\n        /* \"#utility.yul\":6429:6490   */\n      tag_156\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":6419:6490   */\n      swap2\n      pop\n        /* \"#utility.yul\":6375:6500   */\n      pop\n        /* \"#utility.yul\":6162:6507   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6513:6673   */\n    tag_157:\n        /* \"#utility.yul\":6653:6665   */\n      0x4e6f207265776172647300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6649:6650   */\n      0x00\n        /* \"#utility.yul\":6641:6647   */\n      dup3\n        /* \"#utility.yul\":6637:6651   */\n      add\n        /* \"#utility.yul\":6630:6666   */\n      mstore\n        /* \"#utility.yul\":6513:6673   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6679:7045   */\n    tag_158:\n        /* \"#utility.yul\":6821:6824   */\n      0x00\n        /* \"#utility.yul\":6842:6909   */\n      tag_241\n        /* \"#utility.yul\":6906:6908   */\n      0x0a\n        /* \"#utility.yul\":6901:6904   */\n      dup4\n        /* \"#utility.yul\":6842:6909   */\n      tag_150\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6835:6909   */\n      swap2\n      pop\n        /* \"#utility.yul\":6918:7011   */\n      tag_242\n        /* \"#utility.yul\":7007:7010   */\n      dup3\n        /* \"#utility.yul\":6918:7011   */\n      tag_157\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":7036:7038   */\n      0x20\n        /* \"#utility.yul\":7031:7034   */\n      dup3\n        /* \"#utility.yul\":7027:7039   */\n      add\n        /* \"#utility.yul\":7020:7039   */\n      swap1\n      pop\n        /* \"#utility.yul\":6679:7045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7051:7470   */\n    tag_75:\n        /* \"#utility.yul\":7217:7221   */\n      0x00\n        /* \"#utility.yul\":7255:7257   */\n      0x20\n        /* \"#utility.yul\":7244:7253   */\n      dup3\n        /* \"#utility.yul\":7240:7258   */\n      add\n        /* \"#utility.yul\":7232:7258   */\n      swap1\n      pop\n        /* \"#utility.yul\":7304:7313   */\n      dup2\n        /* \"#utility.yul\":7298:7302   */\n      dup2\n        /* \"#utility.yul\":7294:7314   */\n      sub\n        /* \"#utility.yul\":7290:7291   */\n      0x00\n        /* \"#utility.yul\":7279:7288   */\n      dup4\n        /* \"#utility.yul\":7275:7292   */\n      add\n        /* \"#utility.yul\":7268:7315   */\n      mstore\n        /* \"#utility.yul\":7332:7463   */\n      tag_244\n        /* \"#utility.yul\":7458:7462   */\n      dup2\n        /* \"#utility.yul\":7332:7463   */\n      tag_158\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":7324:7463   */\n      swap1\n      pop\n        /* \"#utility.yul\":7051:7470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7476:7918   */\n    tag_91:\n        /* \"#utility.yul\":7625:7629   */\n      0x00\n        /* \"#utility.yul\":7663:7665   */\n      0x60\n        /* \"#utility.yul\":7652:7661   */\n      dup3\n        /* \"#utility.yul\":7648:7666   */\n      add\n        /* \"#utility.yul\":7640:7666   */\n      swap1\n      pop\n        /* \"#utility.yul\":7676:7747   */\n      tag_246\n        /* \"#utility.yul\":7744:7745   */\n      0x00\n        /* \"#utility.yul\":7733:7742   */\n      dup4\n        /* \"#utility.yul\":7729:7746   */\n      add\n        /* \"#utility.yul\":7720:7726   */\n      dup7\n        /* \"#utility.yul\":7676:7747   */\n      tag_147\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7757:7829   */\n      tag_247\n        /* \"#utility.yul\":7825:7827   */\n      0x20\n        /* \"#utility.yul\":7814:7823   */\n      dup4\n        /* \"#utility.yul\":7810:7828   */\n      add\n        /* \"#utility.yul\":7801:7807   */\n      dup6\n        /* \"#utility.yul\":7757:7829   */\n      tag_147\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7839:7911   */\n      tag_248\n        /* \"#utility.yul\":7907:7909   */\n      0x40\n        /* \"#utility.yul\":7896:7905   */\n      dup4\n        /* \"#utility.yul\":7892:7910   */\n      add\n        /* \"#utility.yul\":7883:7889   */\n      dup5\n        /* \"#utility.yul\":7839:7911   */\n      tag_145\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":7476:7918   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7924:8086   */\n    tag_159:\n        /* \"#utility.yul\":8064:8078   */\n      0x5a65726f206465706f7369740000000000000000000000000000000000000000\n        /* \"#utility.yul\":8060:8061   */\n      0x00\n        /* \"#utility.yul\":8052:8058   */\n      dup3\n        /* \"#utility.yul\":8048:8062   */\n      add\n        /* \"#utility.yul\":8041:8079   */\n      mstore\n        /* \"#utility.yul\":7924:8086   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8092:8458   */\n    tag_160:\n        /* \"#utility.yul\":8234:8237   */\n      0x00\n        /* \"#utility.yul\":8255:8322   */\n      tag_251\n        /* \"#utility.yul\":8319:8321   */\n      0x0c\n        /* \"#utility.yul\":8314:8317   */\n      dup4\n        /* \"#utility.yul\":8255:8322   */\n      tag_150\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8248:8322   */\n      swap2\n      pop\n        /* \"#utility.yul\":8331:8424   */\n      tag_252\n        /* \"#utility.yul\":8420:8423   */\n      dup3\n        /* \"#utility.yul\":8331:8424   */\n      tag_159\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":8449:8451   */\n      0x20\n        /* \"#utility.yul\":8444:8447   */\n      dup3\n        /* \"#utility.yul\":8440:8452   */\n      add\n        /* \"#utility.yul\":8433:8452   */\n      swap1\n      pop\n        /* \"#utility.yul\":8092:8458   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8464:8883   */\n    tag_101:\n        /* \"#utility.yul\":8630:8634   */\n      0x00\n        /* \"#utility.yul\":8668:8670   */\n      0x20\n        /* \"#utility.yul\":8657:8666   */\n      dup3\n        /* \"#utility.yul\":8653:8671   */\n      add\n        /* \"#utility.yul\":8645:8671   */\n      swap1\n      pop\n        /* \"#utility.yul\":8717:8726   */\n      dup2\n        /* \"#utility.yul\":8711:8715   */\n      dup2\n        /* \"#utility.yul\":8707:8727   */\n      sub\n        /* \"#utility.yul\":8703:8704   */\n      0x00\n        /* \"#utility.yul\":8692:8701   */\n      dup4\n        /* \"#utility.yul\":8688:8705   */\n      add\n        /* \"#utility.yul\":8681:8728   */\n      mstore\n        /* \"#utility.yul\":8745:8876   */\n      tag_254\n        /* \"#utility.yul\":8871:8875   */\n      dup2\n        /* \"#utility.yul\":8745:8876   */\n      tag_160\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":8737:8876   */\n      swap1\n      pop\n        /* \"#utility.yul\":8464:8883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8889:9080   */\n    tag_108:\n        /* \"#utility.yul\":8929:8932   */\n      0x00\n        /* \"#utility.yul\":8948:8968   */\n      tag_256\n        /* \"#utility.yul\":8966:8967   */\n      dup3\n        /* \"#utility.yul\":8948:8968   */\n      tag_136\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8943:8968   */\n      swap2\n      pop\n        /* \"#utility.yul\":8982:9002   */\n      tag_257\n        /* \"#utility.yul\":9000:9001   */\n      dup4\n        /* \"#utility.yul\":8982:9002   */\n      tag_136\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8977:9002   */\n      swap3\n      pop\n        /* \"#utility.yul\":9025:9026   */\n      dup3\n        /* \"#utility.yul\":9022:9023   */\n      dup3\n        /* \"#utility.yul\":9018:9027   */\n      add\n        /* \"#utility.yul\":9011:9027   */\n      swap1\n      pop\n        /* \"#utility.yul\":9046:9049   */\n      dup1\n        /* \"#utility.yul\":9043:9044   */\n      dup3\n        /* \"#utility.yul\":9040:9050   */\n      gt\n        /* \"#utility.yul\":9037:9073   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":9053:9071   */\n      tag_259\n      tag_153\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":9037:9073   */\n    tag_258:\n        /* \"#utility.yul\":8889:9080   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9086:9496   */\n    tag_119:\n        /* \"#utility.yul\":9126:9133   */\n      0x00\n        /* \"#utility.yul\":9149:9169   */\n      tag_261\n        /* \"#utility.yul\":9167:9168   */\n      dup3\n        /* \"#utility.yul\":9149:9169   */\n      tag_136\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":9144:9169   */\n      swap2\n      pop\n        /* \"#utility.yul\":9183:9203   */\n      tag_262\n        /* \"#utility.yul\":9201:9202   */\n      dup4\n        /* \"#utility.yul\":9183:9203   */\n      tag_136\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":9178:9203   */\n      swap3\n      pop\n        /* \"#utility.yul\":9238:9239   */\n      dup3\n        /* \"#utility.yul\":9235:9236   */\n      dup3\n        /* \"#utility.yul\":9231:9240   */\n      mul\n        /* \"#utility.yul\":9260:9290   */\n      tag_263\n        /* \"#utility.yul\":9278:9289   */\n      dup2\n        /* \"#utility.yul\":9260:9290   */\n      tag_136\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9249:9290   */\n      swap2\n      pop\n        /* \"#utility.yul\":9439:9440   */\n      dup3\n        /* \"#utility.yul\":9430:9437   */\n      dup3\n        /* \"#utility.yul\":9426:9441   */\n      div\n        /* \"#utility.yul\":9423:9424   */\n      dup5\n        /* \"#utility.yul\":9420:9442   */\n      eq\n        /* \"#utility.yul\":9400:9401   */\n      dup4\n        /* \"#utility.yul\":9393:9402   */\n      iszero\n        /* \"#utility.yul\":9373:9456   */\n      or\n        /* \"#utility.yul\":9350:9489   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":9469:9487   */\n      tag_265\n      tag_153\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":9350:9489   */\n    tag_264:\n        /* \"#utility.yul\":9134:9496   */\n      pop\n        /* \"#utility.yul\":9086:9496   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9502:9682   */\n    tag_161:\n        /* \"#utility.yul\":9550:9627   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9547:9548   */\n      0x00\n        /* \"#utility.yul\":9540:9628   */\n      mstore\n        /* \"#utility.yul\":9647:9651   */\n      0x12\n        /* \"#utility.yul\":9644:9645   */\n      0x04\n        /* \"#utility.yul\":9637:9652   */\n      mstore\n        /* \"#utility.yul\":9671:9675   */\n      0x24\n        /* \"#utility.yul\":9668:9669   */\n      0x00\n        /* \"#utility.yul\":9661:9676   */\n      revert\n        /* \"#utility.yul\":9688:9873   */\n    tag_122:\n        /* \"#utility.yul\":9728:9729   */\n      0x00\n        /* \"#utility.yul\":9745:9765   */\n      tag_268\n        /* \"#utility.yul\":9763:9764   */\n      dup3\n        /* \"#utility.yul\":9745:9765   */\n      tag_136\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":9740:9765   */\n      swap2\n      pop\n        /* \"#utility.yul\":9779:9799   */\n      tag_269\n        /* \"#utility.yul\":9797:9798   */\n      dup4\n        /* \"#utility.yul\":9779:9799   */\n      tag_136\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9774:9799   */\n      swap3\n      pop\n        /* \"#utility.yul\":9818:9819   */\n      dup3\n        /* \"#utility.yul\":9808:9843   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":9823:9841   */\n      tag_271\n      tag_161\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":9808:9843   */\n    tag_270:\n        /* \"#utility.yul\":9865:9866   */\n      dup3\n        /* \"#utility.yul\":9862:9863   */\n      dup3\n        /* \"#utility.yul\":9858:9867   */\n      div\n        /* \"#utility.yul\":9853:9867   */\n      swap1\n      pop\n        /* \"#utility.yul\":9688:9873   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207e1d56d2574452075b752103cd7571da782bb8fb94aeca8942c69df9bf13b22564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_306": {
									"entryPoint": null,
									"id": 306,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 325,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 518,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1707:4",
										"nodeType": "YulBlock",
										"src": "0:1707:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "759:80:4",
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nativeSrc": "769:22:4",
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nativeSrc": "778:13:4",
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nativeSrc": "800:33:4",
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nativeSrc": "800:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:4",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:4",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:4",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nativeSrc": "939:413:4",
													"nodeType": "YulBlock",
													"src": "939:413:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:4",
																"nodeType": "YulBlock",
																"src": "985:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:4"
																			},
																			"nativeSrc": "987:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:4"
																		},
																		"nativeSrc": "987:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:4"
																		},
																		"nativeSrc": "956:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:4",
																		"nodeType": "YulLiteral",
																		"src": "981:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:4"
																},
																"nativeSrc": "952:32:4",
																"nodeType": "YulFunctionCall",
																"src": "952:32:4"
															},
															"nativeSrc": "949:119:4",
															"nodeType": "YulIf",
															"src": "949:119:4"
														},
														{
															"nativeSrc": "1078:128:4",
															"nodeType": "YulBlock",
															"src": "1078:128:4",
															"statements": [
																{
																	"nativeSrc": "1093:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:4"
																				},
																				"nativeSrc": "1164:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:4"
																		},
																		"nativeSrc": "1132:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:4",
															"nodeType": "YulBlock",
															"src": "1216:129:4",
															"statements": [
																{
																	"nativeSrc": "1231:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:4"
																				},
																				"nativeSrc": "1303:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:4"
																		},
																		"nativeSrc": "1271:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:4",
														"nodeType": "YulTypedName",
														"src": "901:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:4",
														"nodeType": "YulTypedName",
														"src": "912:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:4",
														"nodeType": "YulTypedName",
														"src": "924:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:4",
														"nodeType": "YulTypedName",
														"src": "932:6:4",
														"type": ""
													}
												],
												"src": "845:507:4"
											},
											{
												"body": {
													"nativeSrc": "1423:53:4",
													"nodeType": "YulBlock",
													"src": "1423:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:4"
																		},
																		"nativeSrc": "1445:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:4"
																},
																"nativeSrc": "1433:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:4"
															},
															"nativeSrc": "1433:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:4",
														"nodeType": "YulTypedName",
														"src": "1411:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:4",
														"nodeType": "YulTypedName",
														"src": "1418:3:4",
														"type": ""
													}
												],
												"src": "1358:118:4"
											},
											{
												"body": {
													"nativeSrc": "1580:124:4",
													"nodeType": "YulBlock",
													"src": "1580:124:4",
													"statements": [
														{
															"nativeSrc": "1590:26:4",
															"nodeType": "YulAssignment",
															"src": "1590:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:4"
																},
																"nativeSrc": "1598:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:4"
																		},
																		"nativeSrc": "1679:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:4"
																},
																"nativeSrc": "1626:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:4"
															},
															"nativeSrc": "1626:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:4",
														"nodeType": "YulTypedName",
														"src": "1552:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:4",
														"nodeType": "YulTypedName",
														"src": "1564:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:4",
														"nodeType": "YulTypedName",
														"src": "1575:4:4",
														"type": ""
													}
												],
												"src": "1482:222:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052670de0b6b3a764000060035534801561001b575f5ffd5b50604051611252380380611252833981810160405281019061003d9190610264565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100ae575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100a591906102b1565b60405180910390fd5b6100bd8161014560201b60201c565b508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506102ca565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102338261020a565b9050919050565b61024381610229565b811461024d575f5ffd5b50565b5f8151905061025e8161023a565b92915050565b5f5f6040838503121561027a57610279610206565b5b5f61028785828601610250565b925050602061029885828601610250565b9150509250929050565b6102ab81610229565b82525050565b5f6020820190506102c45f8301846102a2565b92915050565b610f7b806102d75f395ff3fe608060405234801561000f575f5ffd5b50600436106100b2575f3560e01c80639168ae721161006f5780639168ae721461014057806393707a19146101725780639e447fc61461018e578063b6b55f25146101aa578063f2fde38b146101c6578063f7c618c1146101e2576100b2565b80632e1a7d4d146100b6578063372500ab146100d257806351ed6a30146100dc578063715018a6146100fa5780637b0a47ee146101045780638da5cb5b14610122575b5f5ffd5b6100d060048036038101906100cb9190610a67565b610200565b005b6100da610380565b005b6100e46104f4565b6040516100f19190610b0c565b60405180910390f35b610102610519565b005b61010c61052c565b6040516101199190610b34565b60405180910390f35b61012a610532565b6040516101379190610b6d565b60405180910390f35b61015a60048036038101906101559190610bb0565b610559565b60405161016993929190610bdb565b60405180910390f35b61018c60048036038101906101879190610a67565b61057f565b005b6101a860048036038101906101a39190610a67565b610629565b005b6101c460048036038101906101bf9190610a67565b61063b565b005b6101e060048036038101906101db9190610bb0565b61077d565b005b6101ea610801565b6040516101f79190610b0c565b60405180910390f35b8060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01541015610282576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027990610c6a565b60405180910390fd5b61028b33610826565b8060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8282546102d99190610cb5565b9250508190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161033c929190610ce8565b6020604051808303815f875af1158015610358573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061037c9190610d44565b5050565b61038933610826565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015490505f811161040f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040690610db9565b60405180910390fd5b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001018190555060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016104b0929190610ce8565b6020604051808303815f875af11580156104cc573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104f09190610d44565b5050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105216108e1565b61052a5f610968565b565b60035481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6004602052805f5260405f205f91509050805f0154908060010154908060020154905083565b6105876108e1565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016105e593929190610dd7565b6020604051808303815f875af1158015610601573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106259190610d44565b5050565b6106316108e1565b8060038190555050565b5f811161067d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067490610e56565b60405180910390fd5b61068633610826565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016106e493929190610dd7565b6020604051808303815f875af1158015610700573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107249190610d44565b508060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8282546107739190610e74565b9250508190555050565b6107856108e1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107f5575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107ec9190610b6d565b60405180910390fd5b6107fe81610968565b50565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f816002015411156108d4575f8160020154426108839190610cb5565b90505f670de0b6b3a7640000600354845f0154846108a19190610ea7565b6108ab9190610ea7565b6108b59190610f15565b905080836001015f8282546108ca9190610e74565b9250508190555050505b4281600201819055505050565b6108e9610a29565b73ffffffffffffffffffffffffffffffffffffffff16610907610532565b73ffffffffffffffffffffffffffffffffffffffff16146109665761092a610a29565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161095d9190610b6d565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f819050919050565b610a4681610a34565b8114610a50575f5ffd5b50565b5f81359050610a6181610a3d565b92915050565b5f60208284031215610a7c57610a7b610a30565b5b5f610a8984828501610a53565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610ad4610acf610aca84610a92565b610ab1565b610a92565b9050919050565b5f610ae582610aba565b9050919050565b5f610af682610adb565b9050919050565b610b0681610aec565b82525050565b5f602082019050610b1f5f830184610afd565b92915050565b610b2e81610a34565b82525050565b5f602082019050610b475f830184610b25565b92915050565b5f610b5782610a92565b9050919050565b610b6781610b4d565b82525050565b5f602082019050610b805f830184610b5e565b92915050565b610b8f81610b4d565b8114610b99575f5ffd5b50565b5f81359050610baa81610b86565b92915050565b5f60208284031215610bc557610bc4610a30565b5b5f610bd284828501610b9c565b91505092915050565b5f606082019050610bee5f830186610b25565b610bfb6020830185610b25565b610c086040830184610b25565b949350505050565b5f82825260208201905092915050565b7f4e6f7420656e6f756768207374616b65640000000000000000000000000000005f82015250565b5f610c54601183610c10565b9150610c5f82610c20565b602082019050919050565b5f6020820190508181035f830152610c8181610c48565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610cbf82610a34565b9150610cca83610a34565b9250828203905081811115610ce257610ce1610c88565b5b92915050565b5f604082019050610cfb5f830185610b5e565b610d086020830184610b25565b9392505050565b5f8115159050919050565b610d2381610d0f565b8114610d2d575f5ffd5b50565b5f81519050610d3e81610d1a565b92915050565b5f60208284031215610d5957610d58610a30565b5b5f610d6684828501610d30565b91505092915050565b7f4e6f2072657761726473000000000000000000000000000000000000000000005f82015250565b5f610da3600a83610c10565b9150610dae82610d6f565b602082019050919050565b5f6020820190508181035f830152610dd081610d97565b9050919050565b5f606082019050610dea5f830186610b5e565b610df76020830185610b5e565b610e046040830184610b25565b949350505050565b7f5a65726f206465706f73697400000000000000000000000000000000000000005f82015250565b5f610e40600c83610c10565b9150610e4b82610e0c565b602082019050919050565b5f6020820190508181035f830152610e6d81610e34565b9050919050565b5f610e7e82610a34565b9150610e8983610a34565b9250828201905080821115610ea157610ea0610c88565b5b92915050565b5f610eb182610a34565b9150610ebc83610a34565b9250828202610eca81610a34565b91508282048414831517610ee157610ee0610c88565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610f1f82610a34565b9150610f2a83610a34565b925082610f3a57610f39610ee8565b5b82820490509291505056fea26469706673582212207e1d56d2574452075b752103cd7571da782bb8fb94aeca8942c69df9bf13b22564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1252 CODESIZE SUB DUP1 PUSH2 0x1252 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x3D SWAP2 SWAP1 PUSH2 0x264 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5 SWAP2 SWAP1 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBD DUP2 PUSH2 0x145 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x2CA JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x233 DUP3 PUSH2 0x20A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x243 DUP2 PUSH2 0x229 JUMP JUMPDEST DUP2 EQ PUSH2 0x24D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25E DUP2 PUSH2 0x23A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27A JUMPI PUSH2 0x279 PUSH2 0x206 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x287 DUP6 DUP3 DUP7 ADD PUSH2 0x250 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x298 DUP6 DUP3 DUP7 ADD PUSH2 0x250 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AB DUP2 PUSH2 0x229 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C4 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF7B DUP1 PUSH2 0x2D7 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9168AE72 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x93707A19 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x1E2 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x51ED6A30 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x122 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0x200 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDA PUSH2 0x380 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE4 PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x102 PUSH2 0x519 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10C PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xB6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xBB0 JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x169 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0xBB0 JUMP JUMPDEST PUSH2 0x77D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EA PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x282 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x279 SWAP1 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28B CALLER PUSH2 0x826 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0xCB5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33C SWAP3 SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x358 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0xD44 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x389 CALLER PUSH2 0x826 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x40F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x406 SWAP1 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP3 SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4CC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0xD44 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x8E1 JUMP JUMPDEST PUSH2 0x52A PUSH0 PUSH2 0x968 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x587 PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x601 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x625 SWAP2 SWAP1 PUSH2 0xD44 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x631 PUSH2 0x8E1 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x674 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x686 CALLER PUSH2 0x826 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x700 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x724 SWAP2 SWAP1 PUSH2 0xD44 JUMP JUMPDEST POP DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x773 SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x785 PUSH2 0x8E1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7F5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EC SWAP2 SWAP1 PUSH2 0xB6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7FE DUP2 PUSH2 0x968 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x8D4 JUMPI PUSH0 DUP2 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x883 SWAP2 SWAP1 PUSH2 0xCB5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SLOAD DUP5 PUSH0 ADD SLOAD DUP5 PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x8E9 PUSH2 0xA29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x907 PUSH2 0x532 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x966 JUMPI PUSH2 0x92A PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95D SWAP2 SWAP1 PUSH2 0xB6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA46 DUP2 PUSH2 0xA34 JUMP JUMPDEST DUP2 EQ PUSH2 0xA50 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA61 DUP2 PUSH2 0xA3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7C JUMPI PUSH2 0xA7B PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA89 DUP5 DUP3 DUP6 ADD PUSH2 0xA53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAD4 PUSH2 0xACF PUSH2 0xACA DUP5 PUSH2 0xA92 JUMP JUMPDEST PUSH2 0xAB1 JUMP JUMPDEST PUSH2 0xA92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAE5 DUP3 PUSH2 0xABA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAF6 DUP3 PUSH2 0xADB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB06 DUP2 PUSH2 0xAEC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB1F PUSH0 DUP4 ADD DUP5 PUSH2 0xAFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB2E DUP2 PUSH2 0xA34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB47 PUSH0 DUP4 ADD DUP5 PUSH2 0xB25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB57 DUP3 PUSH2 0xA92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB67 DUP2 PUSH2 0xB4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB80 PUSH0 DUP4 ADD DUP5 PUSH2 0xB5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB8F DUP2 PUSH2 0xB4D JUMP JUMPDEST DUP2 EQ PUSH2 0xB99 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAA DUP2 PUSH2 0xB86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC5 JUMPI PUSH2 0xBC4 PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBD2 DUP5 DUP3 DUP6 ADD PUSH2 0xB9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xBEE PUSH0 DUP4 ADD DUP7 PUSH2 0xB25 JUMP JUMPDEST PUSH2 0xBFB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB25 JUMP JUMPDEST PUSH2 0xC08 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB25 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768207374616B6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC54 PUSH1 0x11 DUP4 PUSH2 0xC10 JUMP JUMPDEST SWAP2 POP PUSH2 0xC5F DUP3 PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC81 DUP2 PUSH2 0xC48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xCBF DUP3 PUSH2 0xA34 JUMP JUMPDEST SWAP2 POP PUSH2 0xCCA DUP4 PUSH2 0xA34 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xCE2 JUMPI PUSH2 0xCE1 PUSH2 0xC88 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCFB PUSH0 DUP4 ADD DUP6 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0xD08 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB25 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD23 DUP2 PUSH2 0xD0F JUMP JUMPDEST DUP2 EQ PUSH2 0xD2D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD3E DUP2 PUSH2 0xD1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD59 JUMPI PUSH2 0xD58 PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD66 DUP5 DUP3 DUP6 ADD PUSH2 0xD30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647300000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDA3 PUSH1 0xA DUP4 PUSH2 0xC10 JUMP JUMPDEST SWAP2 POP PUSH2 0xDAE DUP3 PUSH2 0xD6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDD0 DUP2 PUSH2 0xD97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDEA PUSH0 DUP4 ADD DUP7 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0xDF7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0xE04 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB25 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5A65726F206465706F7369740000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE40 PUSH1 0xC DUP4 PUSH2 0xC10 JUMP JUMPDEST SWAP2 POP PUSH2 0xE4B DUP3 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE6D DUP2 PUSH2 0xE34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE7E DUP3 PUSH2 0xA34 JUMP JUMPDEST SWAP2 POP PUSH2 0xE89 DUP4 PUSH2 0xA34 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEA1 JUMPI PUSH2 0xEA0 PUSH2 0xC88 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEB1 DUP3 PUSH2 0xA34 JUMP JUMPDEST SWAP2 POP PUSH2 0xEBC DUP4 PUSH2 0xA34 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xECA DUP2 PUSH2 0xA34 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xEE1 JUMPI PUSH2 0xEE0 PUSH2 0xC88 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF1F DUP3 PUSH2 0xA34 JUMP JUMPDEST SWAP2 POP PUSH2 0xF2A DUP4 PUSH2 0xA34 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF3A JUMPI PUSH2 0xF39 PUSH2 0xEE8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x1D56D2574452075B752103CD7571DA782BB8FB94AECA8942C69DF9BF13B225 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "177:1945:3:-:0;;;308:4;280:32;;526:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;589:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;632:11:3::1;612:10;;:32;;;;;;;;;;;;;;;;;;676:12;655:11;;:34;;;;;;;;;;;;;;;;;;526:171:::0;;177:1945;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;177:1945:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 2273,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_237": {
									"entryPoint": 2601,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2408,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateRewards_473": {
									"entryPoint": 2086,
									"id": 473,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimRewards_422": {
									"entryPoint": 896,
									"id": 422,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_344": {
									"entryPoint": 1595,
									"id": 344,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@fundRewards_493": {
									"entryPoint": 1407,
									"id": 493,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1330,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1305,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardRate_270": {
									"entryPoint": 1324,
									"id": 270,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_267": {
									"entryPoint": 2049,
									"id": 267,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRewardRate_505": {
									"entryPoint": 1577,
									"id": 505,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeToken_264": {
									"entryPoint": 1268,
									"id": 264,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakers_282": {
									"entryPoint": 1369,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1917,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_382": {
									"entryPoint": 512,
									"id": 382,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack": {
									"entryPoint": 2813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3543,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3304,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": 2828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3035,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$225_to_t_address": {
									"entryPoint": 2796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3816,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2608,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f": {
									"entryPoint": 3596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76": {
									"entryPoint": 3104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e": {
									"entryPoint": 3439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9876:4",
										"nodeType": "YulBlock",
										"src": "0:9876:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:32:4",
													"nodeType": "YulBlock",
													"src": "379:32:4",
													"statements": [
														{
															"nativeSrc": "389:16:4",
															"nodeType": "YulAssignment",
															"src": "389:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:4",
																"nodeType": "YulIdentifier",
																"src": "400:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:77:4"
											},
											{
												"body": {
													"nativeSrc": "460:79:4",
													"nodeType": "YulBlock",
													"src": "460:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:4",
																"nodeType": "YulBlock",
																"src": "517:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:4",
																					"nodeType": "YulLiteral",
																					"src": "526:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:4",
																					"nodeType": "YulLiteral",
																					"src": "529:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:4"
																			},
																			"nativeSrc": "519:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:4"
																		},
																		"nativeSrc": "519:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:4"
																				},
																				"nativeSrc": "490:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:4"
																		},
																		"nativeSrc": "480:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:4"
																},
																"nativeSrc": "473:43:4",
																"nodeType": "YulFunctionCall",
																"src": "473:43:4"
															},
															"nativeSrc": "470:63:4",
															"nodeType": "YulIf",
															"src": "470:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:4",
														"nodeType": "YulTypedName",
														"src": "453:5:4",
														"type": ""
													}
												],
												"src": "417:122:4"
											},
											{
												"body": {
													"nativeSrc": "597:87:4",
													"nodeType": "YulBlock",
													"src": "597:87:4",
													"statements": [
														{
															"nativeSrc": "607:29:4",
															"nodeType": "YulAssignment",
															"src": "607:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:4"
																},
																"nativeSrc": "616:20:4",
																"nodeType": "YulFunctionCall",
																"src": "616:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:4"
																},
																"nativeSrc": "645:33:4",
																"nodeType": "YulFunctionCall",
																"src": "645:33:4"
															},
															"nativeSrc": "645:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:4",
														"nodeType": "YulTypedName",
														"src": "575:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:4",
														"nodeType": "YulTypedName",
														"src": "583:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:4",
														"nodeType": "YulTypedName",
														"src": "591:5:4",
														"type": ""
													}
												],
												"src": "545:139:4"
											},
											{
												"body": {
													"nativeSrc": "756:263:4",
													"nodeType": "YulBlock",
													"src": "756:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:4",
																"nodeType": "YulBlock",
																"src": "802:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:4"
																			},
																			"nativeSrc": "804:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:4"
																		},
																		"nativeSrc": "804:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:4"
																		},
																		"nativeSrc": "773:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:4",
																		"nodeType": "YulLiteral",
																		"src": "798:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:4"
																},
																"nativeSrc": "769:32:4",
																"nodeType": "YulFunctionCall",
																"src": "769:32:4"
															},
															"nativeSrc": "766:119:4",
															"nodeType": "YulIf",
															"src": "766:119:4"
														},
														{
															"nativeSrc": "895:117:4",
															"nodeType": "YulBlock",
															"src": "895:117:4",
															"statements": [
																{
																	"nativeSrc": "910:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:4",
																		"nodeType": "YulLiteral",
																		"src": "924:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:4",
																			"nodeType": "YulTypedName",
																			"src": "914:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:4",
																	"nodeType": "YulAssignment",
																	"src": "939:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:4"
																				},
																				"nativeSrc": "970:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:4"
																		},
																		"nativeSrc": "949:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:4",
														"nodeType": "YulTypedName",
														"src": "726:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:4",
														"nodeType": "YulTypedName",
														"src": "737:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:4",
														"nodeType": "YulTypedName",
														"src": "749:6:4",
														"type": ""
													}
												],
												"src": "690:329:4"
											},
											{
												"body": {
													"nativeSrc": "1070:81:4",
													"nodeType": "YulBlock",
													"src": "1070:81:4",
													"statements": [
														{
															"nativeSrc": "1080:65:4",
															"nodeType": "YulAssignment",
															"src": "1080:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:4",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:4"
																},
																"nativeSrc": "1091:54:4",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:4",
														"nodeType": "YulTypedName",
														"src": "1052:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:4",
														"nodeType": "YulTypedName",
														"src": "1062:7:4",
														"type": ""
													}
												],
												"src": "1025:126:4"
											},
											{
												"body": {
													"nativeSrc": "1189:28:4",
													"nodeType": "YulBlock",
													"src": "1189:28:4",
													"statements": [
														{
															"nativeSrc": "1199:12:4",
															"nodeType": "YulAssignment",
															"src": "1199:12:4",
															"value": {
																"name": "value",
																"nativeSrc": "1206:5:4",
																"nodeType": "YulIdentifier",
																"src": "1206:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1199:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1199:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1157:60:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1175:5:4",
														"nodeType": "YulTypedName",
														"src": "1175:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1185:3:4",
														"nodeType": "YulTypedName",
														"src": "1185:3:4",
														"type": ""
													}
												],
												"src": "1157:60:4"
											},
											{
												"body": {
													"nativeSrc": "1283:82:4",
													"nodeType": "YulBlock",
													"src": "1283:82:4",
													"statements": [
														{
															"nativeSrc": "1293:66:4",
															"nodeType": "YulAssignment",
															"src": "1293:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1351:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1351:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1333:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1333:17:4"
																				},
																				"nativeSrc": "1333:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1333:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1324:8:4",
																			"nodeType": "YulIdentifier",
																			"src": "1324:8:4"
																		},
																		"nativeSrc": "1324:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1324:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1306:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "1306:17:4"
																},
																"nativeSrc": "1306:53:4",
																"nodeType": "YulFunctionCall",
																"src": "1306:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1293:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "1293:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1223:142:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1263:5:4",
														"nodeType": "YulTypedName",
														"src": "1263:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1273:9:4",
														"nodeType": "YulTypedName",
														"src": "1273:9:4",
														"type": ""
													}
												],
												"src": "1223:142:4"
											},
											{
												"body": {
													"nativeSrc": "1431:66:4",
													"nodeType": "YulBlock",
													"src": "1431:66:4",
													"statements": [
														{
															"nativeSrc": "1441:50:4",
															"nodeType": "YulAssignment",
															"src": "1441:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1485:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1485:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1454:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "1454:30:4"
																},
																"nativeSrc": "1454:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1454:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1441:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "1441:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1371:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:4",
														"nodeType": "YulTypedName",
														"src": "1411:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1421:9:4",
														"nodeType": "YulTypedName",
														"src": "1421:9:4",
														"type": ""
													}
												],
												"src": "1371:126:4"
											},
											{
												"body": {
													"nativeSrc": "1577:66:4",
													"nodeType": "YulBlock",
													"src": "1577:66:4",
													"statements": [
														{
															"nativeSrc": "1587:50:4",
															"nodeType": "YulAssignment",
															"src": "1587:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1631:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1631:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1600:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "1600:30:4"
																},
																"nativeSrc": "1600:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1600:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1587:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "1587:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$225_to_t_address",
												"nativeSrc": "1503:140:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1557:5:4",
														"nodeType": "YulTypedName",
														"src": "1557:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1567:9:4",
														"nodeType": "YulTypedName",
														"src": "1567:9:4",
														"type": ""
													}
												],
												"src": "1503:140:4"
											},
											{
												"body": {
													"nativeSrc": "1728:80:4",
													"nodeType": "YulBlock",
													"src": "1728:80:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1745:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1745:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1795:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1795:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$225_to_t_address",
																			"nativeSrc": "1750:44:4",
																			"nodeType": "YulIdentifier",
																			"src": "1750:44:4"
																		},
																		"nativeSrc": "1750:51:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1750:51:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1738:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1738:6:4"
																},
																"nativeSrc": "1738:64:4",
																"nodeType": "YulFunctionCall",
																"src": "1738:64:4"
															},
															"nativeSrc": "1738:64:4",
															"nodeType": "YulExpressionStatement",
															"src": "1738:64:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
												"nativeSrc": "1649:159:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1716:5:4",
														"nodeType": "YulTypedName",
														"src": "1716:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1723:3:4",
														"nodeType": "YulTypedName",
														"src": "1723:3:4",
														"type": ""
													}
												],
												"src": "1649:159:4"
											},
											{
												"body": {
													"nativeSrc": "1926:138:4",
													"nodeType": "YulBlock",
													"src": "1926:138:4",
													"statements": [
														{
															"nativeSrc": "1936:26:4",
															"nodeType": "YulAssignment",
															"src": "1936:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1948:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1948:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1959:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1959:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1944:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1944:3:4"
																},
																"nativeSrc": "1944:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1944:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1936:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1936:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2030:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2030:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2043:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2043:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2054:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2054:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2039:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2039:3:4"
																		},
																		"nativeSrc": "2039:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2039:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
																	"nativeSrc": "1972:57:4",
																	"nodeType": "YulIdentifier",
																	"src": "1972:57:4"
																},
																"nativeSrc": "1972:85:4",
																"nodeType": "YulFunctionCall",
																"src": "1972:85:4"
															},
															"nativeSrc": "1972:85:4",
															"nodeType": "YulExpressionStatement",
															"src": "1972:85:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nativeSrc": "1814:250:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:4",
														"nodeType": "YulTypedName",
														"src": "1898:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1910:6:4",
														"nodeType": "YulTypedName",
														"src": "1910:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1921:4:4",
														"nodeType": "YulTypedName",
														"src": "1921:4:4",
														"type": ""
													}
												],
												"src": "1814:250:4"
											},
											{
												"body": {
													"nativeSrc": "2135:53:4",
													"nodeType": "YulBlock",
													"src": "2135:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2152:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2152:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2175:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2175:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2157:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "2157:17:4"
																		},
																		"nativeSrc": "2157:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2145:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2145:6:4"
																},
																"nativeSrc": "2145:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2145:37:4"
															},
															"nativeSrc": "2145:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "2145:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2070:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2123:5:4",
														"nodeType": "YulTypedName",
														"src": "2123:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2130:3:4",
														"nodeType": "YulTypedName",
														"src": "2130:3:4",
														"type": ""
													}
												],
												"src": "2070:118:4"
											},
											{
												"body": {
													"nativeSrc": "2292:124:4",
													"nodeType": "YulBlock",
													"src": "2292:124:4",
													"statements": [
														{
															"nativeSrc": "2302:26:4",
															"nodeType": "YulAssignment",
															"src": "2302:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2314:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2314:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2325:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2325:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2310:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2310:3:4"
																},
																"nativeSrc": "2310:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2310:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2302:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2302:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2382:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2382:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2395:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2395:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2406:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2406:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2391:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2391:3:4"
																		},
																		"nativeSrc": "2391:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2391:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2338:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2338:43:4"
																},
																"nativeSrc": "2338:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2338:71:4"
															},
															"nativeSrc": "2338:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "2338:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2194:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2264:9:4",
														"nodeType": "YulTypedName",
														"src": "2264:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2276:6:4",
														"nodeType": "YulTypedName",
														"src": "2276:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2287:4:4",
														"nodeType": "YulTypedName",
														"src": "2287:4:4",
														"type": ""
													}
												],
												"src": "2194:222:4"
											},
											{
												"body": {
													"nativeSrc": "2467:51:4",
													"nodeType": "YulBlock",
													"src": "2467:51:4",
													"statements": [
														{
															"nativeSrc": "2477:35:4",
															"nodeType": "YulAssignment",
															"src": "2477:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2506:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2506:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2488:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "2488:17:4"
																},
																"nativeSrc": "2488:24:4",
																"nodeType": "YulFunctionCall",
																"src": "2488:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2477:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "2477:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2422:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2449:5:4",
														"nodeType": "YulTypedName",
														"src": "2449:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2459:7:4",
														"nodeType": "YulTypedName",
														"src": "2459:7:4",
														"type": ""
													}
												],
												"src": "2422:96:4"
											},
											{
												"body": {
													"nativeSrc": "2589:53:4",
													"nodeType": "YulBlock",
													"src": "2589:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2606:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2606:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2629:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2629:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2611:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "2611:17:4"
																		},
																		"nativeSrc": "2611:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2611:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2599:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:4"
																},
																"nativeSrc": "2599:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2599:37:4"
															},
															"nativeSrc": "2599:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "2599:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2524:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2577:5:4",
														"nodeType": "YulTypedName",
														"src": "2577:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2584:3:4",
														"nodeType": "YulTypedName",
														"src": "2584:3:4",
														"type": ""
													}
												],
												"src": "2524:118:4"
											},
											{
												"body": {
													"nativeSrc": "2746:124:4",
													"nodeType": "YulBlock",
													"src": "2746:124:4",
													"statements": [
														{
															"nativeSrc": "2756:26:4",
															"nodeType": "YulAssignment",
															"src": "2756:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2768:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2768:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2779:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2779:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2764:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2764:3:4"
																},
																"nativeSrc": "2764:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2764:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2756:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2756:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2836:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2836:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2849:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2849:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2860:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2860:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2845:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2845:3:4"
																		},
																		"nativeSrc": "2845:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2845:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2792:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2792:43:4"
																},
																"nativeSrc": "2792:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2792:71:4"
															},
															"nativeSrc": "2792:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "2792:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2648:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2718:9:4",
														"nodeType": "YulTypedName",
														"src": "2718:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2730:6:4",
														"nodeType": "YulTypedName",
														"src": "2730:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2741:4:4",
														"nodeType": "YulTypedName",
														"src": "2741:4:4",
														"type": ""
													}
												],
												"src": "2648:222:4"
											},
											{
												"body": {
													"nativeSrc": "2919:79:4",
													"nodeType": "YulBlock",
													"src": "2919:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2976:16:4",
																"nodeType": "YulBlock",
																"src": "2976:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2985:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2985:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2988:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2988:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2978:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2978:6:4"
																			},
																			"nativeSrc": "2978:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2978:12:4"
																		},
																		"nativeSrc": "2978:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2978:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2942:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2942:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2967:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "2967:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2949:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "2949:17:4"
																				},
																				"nativeSrc": "2949:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2949:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2939:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2939:2:4"
																		},
																		"nativeSrc": "2939:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2939:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2932:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2932:6:4"
																},
																"nativeSrc": "2932:43:4",
																"nodeType": "YulFunctionCall",
																"src": "2932:43:4"
															},
															"nativeSrc": "2929:63:4",
															"nodeType": "YulIf",
															"src": "2929:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2876:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:4",
														"nodeType": "YulTypedName",
														"src": "2912:5:4",
														"type": ""
													}
												],
												"src": "2876:122:4"
											},
											{
												"body": {
													"nativeSrc": "3056:87:4",
													"nodeType": "YulBlock",
													"src": "3056:87:4",
													"statements": [
														{
															"nativeSrc": "3066:29:4",
															"nodeType": "YulAssignment",
															"src": "3066:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3088:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3088:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3075:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "3075:12:4"
																},
																"nativeSrc": "3075:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3075:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3066:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "3066:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3131:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3131:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3104:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "3104:26:4"
																},
																"nativeSrc": "3104:33:4",
																"nodeType": "YulFunctionCall",
																"src": "3104:33:4"
															},
															"nativeSrc": "3104:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "3104:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3004:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3034:6:4",
														"nodeType": "YulTypedName",
														"src": "3034:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3042:3:4",
														"nodeType": "YulTypedName",
														"src": "3042:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3050:5:4",
														"nodeType": "YulTypedName",
														"src": "3050:5:4",
														"type": ""
													}
												],
												"src": "3004:139:4"
											},
											{
												"body": {
													"nativeSrc": "3215:263:4",
													"nodeType": "YulBlock",
													"src": "3215:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3261:83:4",
																"nodeType": "YulBlock",
																"src": "3261:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3263:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "3263:77:4"
																			},
																			"nativeSrc": "3263:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3263:79:4"
																		},
																		"nativeSrc": "3263:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3263:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3236:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3236:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3245:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3232:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3232:3:4"
																		},
																		"nativeSrc": "3232:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3232:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3257:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3257:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3228:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3228:3:4"
																},
																"nativeSrc": "3228:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3228:32:4"
															},
															"nativeSrc": "3225:119:4",
															"nodeType": "YulIf",
															"src": "3225:119:4"
														},
														{
															"nativeSrc": "3354:117:4",
															"nodeType": "YulBlock",
															"src": "3354:117:4",
															"statements": [
																{
																	"nativeSrc": "3369:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3369:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3383:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3383:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3373:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3373:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3398:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3398:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3433:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3433:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3444:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3444:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3429:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3429:3:4"
																				},
																				"nativeSrc": "3429:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3429:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3453:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3453:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3408:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3408:20:4"
																		},
																		"nativeSrc": "3408:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3408:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3398:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3398:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3149:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3185:9:4",
														"nodeType": "YulTypedName",
														"src": "3185:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3196:7:4",
														"nodeType": "YulTypedName",
														"src": "3196:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3208:6:4",
														"nodeType": "YulTypedName",
														"src": "3208:6:4",
														"type": ""
													}
												],
												"src": "3149:329:4"
											},
											{
												"body": {
													"nativeSrc": "3638:288:4",
													"nodeType": "YulBlock",
													"src": "3638:288:4",
													"statements": [
														{
															"nativeSrc": "3648:26:4",
															"nodeType": "YulAssignment",
															"src": "3648:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3660:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3660:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3671:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3671:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3656:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3656:3:4"
																},
																"nativeSrc": "3656:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3656:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3648:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3648:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3728:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3728:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3741:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3741:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3752:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3752:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3737:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3737:3:4"
																		},
																		"nativeSrc": "3737:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3737:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3684:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "3684:43:4"
																},
																"nativeSrc": "3684:71:4",
																"nodeType": "YulFunctionCall",
																"src": "3684:71:4"
															},
															"nativeSrc": "3684:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "3684:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3809:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3809:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3822:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3822:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3833:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3833:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3818:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3818:3:4"
																		},
																		"nativeSrc": "3818:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3818:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3765:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "3765:43:4"
																},
																"nativeSrc": "3765:72:4",
																"nodeType": "YulFunctionCall",
																"src": "3765:72:4"
															},
															"nativeSrc": "3765:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "3765:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3891:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3891:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3904:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3904:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3915:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3915:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3900:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3900:3:4"
																		},
																		"nativeSrc": "3900:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3900:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3847:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "3847:43:4"
																},
																"nativeSrc": "3847:72:4",
																"nodeType": "YulFunctionCall",
																"src": "3847:72:4"
															},
															"nativeSrc": "3847:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "3847:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3484:442:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3594:9:4",
														"nodeType": "YulTypedName",
														"src": "3594:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3606:6:4",
														"nodeType": "YulTypedName",
														"src": "3606:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3614:6:4",
														"nodeType": "YulTypedName",
														"src": "3614:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3622:6:4",
														"nodeType": "YulTypedName",
														"src": "3622:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3633:4:4",
														"nodeType": "YulTypedName",
														"src": "3633:4:4",
														"type": ""
													}
												],
												"src": "3484:442:4"
											},
											{
												"body": {
													"nativeSrc": "4028:73:4",
													"nodeType": "YulBlock",
													"src": "4028:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4045:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4045:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4050:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4050:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4038:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4038:6:4"
																},
																"nativeSrc": "4038:19:4",
																"nodeType": "YulFunctionCall",
																"src": "4038:19:4"
															},
															"nativeSrc": "4038:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "4038:19:4"
														},
														{
															"nativeSrc": "4066:29:4",
															"nodeType": "YulAssignment",
															"src": "4066:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4085:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4085:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4090:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4090:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4081:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4081:3:4"
																},
																"nativeSrc": "4081:14:4",
																"nodeType": "YulFunctionCall",
																"src": "4081:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4066:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "4066:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3932:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4000:3:4",
														"nodeType": "YulTypedName",
														"src": "4000:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4005:6:4",
														"nodeType": "YulTypedName",
														"src": "4005:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4016:11:4",
														"nodeType": "YulTypedName",
														"src": "4016:11:4",
														"type": ""
													}
												],
												"src": "3932:169:4"
											},
											{
												"body": {
													"nativeSrc": "4213:61:4",
													"nodeType": "YulBlock",
													"src": "4213:61:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4235:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4235:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4243:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4243:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4231:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4231:3:4"
																		},
																		"nativeSrc": "4231:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4231:14:4"
																	},
																	{
																		"hexValue": "4e6f7420656e6f756768207374616b6564",
																		"kind": "string",
																		"nativeSrc": "4247:19:4",
																		"nodeType": "YulLiteral",
																		"src": "4247:19:4",
																		"type": "",
																		"value": "Not enough staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4224:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4224:6:4"
																},
																"nativeSrc": "4224:43:4",
																"nodeType": "YulFunctionCall",
																"src": "4224:43:4"
															},
															"nativeSrc": "4224:43:4",
															"nodeType": "YulExpressionStatement",
															"src": "4224:43:4"
														}
													]
												},
												"name": "store_literal_in_memory_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76",
												"nativeSrc": "4107:167:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4205:6:4",
														"nodeType": "YulTypedName",
														"src": "4205:6:4",
														"type": ""
													}
												],
												"src": "4107:167:4"
											},
											{
												"body": {
													"nativeSrc": "4426:220:4",
													"nodeType": "YulBlock",
													"src": "4426:220:4",
													"statements": [
														{
															"nativeSrc": "4436:74:4",
															"nodeType": "YulAssignment",
															"src": "4436:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4502:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4502:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4507:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4507:2:4",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4443:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "4443:58:4"
																},
																"nativeSrc": "4443:67:4",
																"nodeType": "YulFunctionCall",
																"src": "4443:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4436:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4436:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4608:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4608:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76",
																	"nativeSrc": "4519:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "4519:88:4"
																},
																"nativeSrc": "4519:93:4",
																"nodeType": "YulFunctionCall",
																"src": "4519:93:4"
															},
															"nativeSrc": "4519:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "4519:93:4"
														},
														{
															"nativeSrc": "4621:19:4",
															"nodeType": "YulAssignment",
															"src": "4621:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4632:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4632:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4637:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4637:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4628:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4628:3:4"
																},
																"nativeSrc": "4628:12:4",
																"nodeType": "YulFunctionCall",
																"src": "4628:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4621:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4621:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4280:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4414:3:4",
														"nodeType": "YulTypedName",
														"src": "4414:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4422:3:4",
														"nodeType": "YulTypedName",
														"src": "4422:3:4",
														"type": ""
													}
												],
												"src": "4280:366:4"
											},
											{
												"body": {
													"nativeSrc": "4823:248:4",
													"nodeType": "YulBlock",
													"src": "4823:248:4",
													"statements": [
														{
															"nativeSrc": "4833:26:4",
															"nodeType": "YulAssignment",
															"src": "4833:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4845:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4845:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4856:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4856:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4841:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4841:3:4"
																},
																"nativeSrc": "4841:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4841:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4833:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4833:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4880:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4880:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4891:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4891:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4876:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4876:3:4"
																		},
																		"nativeSrc": "4876:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4876:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4899:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "4899:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4905:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4905:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4895:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4895:3:4"
																		},
																		"nativeSrc": "4895:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4895:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4869:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4869:6:4"
																},
																"nativeSrc": "4869:47:4",
																"nodeType": "YulFunctionCall",
																"src": "4869:47:4"
															},
															"nativeSrc": "4869:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "4869:47:4"
														},
														{
															"nativeSrc": "4925:139:4",
															"nodeType": "YulAssignment",
															"src": "4925:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5059:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "5059:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4933:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "4933:124:4"
																},
																"nativeSrc": "4933:131:4",
																"nodeType": "YulFunctionCall",
																"src": "4933:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4925:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4925:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4652:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4803:9:4",
														"nodeType": "YulTypedName",
														"src": "4803:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4818:4:4",
														"nodeType": "YulTypedName",
														"src": "4818:4:4",
														"type": ""
													}
												],
												"src": "4652:419:4"
											},
											{
												"body": {
													"nativeSrc": "5105:152:4",
													"nodeType": "YulBlock",
													"src": "5105:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5122:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5122:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5125:77:4",
																		"nodeType": "YulLiteral",
																		"src": "5125:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5115:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5115:6:4"
																},
																"nativeSrc": "5115:88:4",
																"nodeType": "YulFunctionCall",
																"src": "5115:88:4"
															},
															"nativeSrc": "5115:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "5115:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5219:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5219:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5222:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5222:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5212:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:4"
																},
																"nativeSrc": "5212:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5212:15:4"
															},
															"nativeSrc": "5212:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5212:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5243:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5243:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5246:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5246:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5236:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5236:6:4"
																},
																"nativeSrc": "5236:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5236:15:4"
															},
															"nativeSrc": "5236:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5236:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5077:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "5077:180:4"
											},
											{
												"body": {
													"nativeSrc": "5308:149:4",
													"nodeType": "YulBlock",
													"src": "5308:149:4",
													"statements": [
														{
															"nativeSrc": "5318:25:4",
															"nodeType": "YulAssignment",
															"src": "5318:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5341:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5341:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5323:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5323:17:4"
																},
																"nativeSrc": "5323:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5323:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5318:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5318:1:4"
																}
															]
														},
														{
															"nativeSrc": "5352:25:4",
															"nodeType": "YulAssignment",
															"src": "5352:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5375:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5375:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5357:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5357:17:4"
																},
																"nativeSrc": "5357:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5357:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5352:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5352:1:4"
																}
															]
														},
														{
															"nativeSrc": "5386:17:4",
															"nodeType": "YulAssignment",
															"src": "5386:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5398:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5398:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5401:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5401:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5394:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5394:3:4"
																},
																"nativeSrc": "5394:9:4",
																"nodeType": "YulFunctionCall",
																"src": "5394:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5386:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5386:4:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5428:22:4",
																"nodeType": "YulBlock",
																"src": "5428:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5430:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "5430:16:4"
																			},
																			"nativeSrc": "5430:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5430:18:4"
																		},
																		"nativeSrc": "5430:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5430:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5419:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "5419:4:4"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5425:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5425:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5416:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "5416:2:4"
																},
																"nativeSrc": "5416:11:4",
																"nodeType": "YulFunctionCall",
																"src": "5416:11:4"
															},
															"nativeSrc": "5413:37:4",
															"nodeType": "YulIf",
															"src": "5413:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5263:194:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5294:1:4",
														"nodeType": "YulTypedName",
														"src": "5294:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5297:1:4",
														"nodeType": "YulTypedName",
														"src": "5297:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5303:4:4",
														"nodeType": "YulTypedName",
														"src": "5303:4:4",
														"type": ""
													}
												],
												"src": "5263:194:4"
											},
											{
												"body": {
													"nativeSrc": "5589:206:4",
													"nodeType": "YulBlock",
													"src": "5589:206:4",
													"statements": [
														{
															"nativeSrc": "5599:26:4",
															"nodeType": "YulAssignment",
															"src": "5599:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5611:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5611:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5622:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5622:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5607:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5607:3:4"
																},
																"nativeSrc": "5607:18:4",
																"nodeType": "YulFunctionCall",
																"src": "5607:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5599:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5599:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5679:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5679:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5692:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5692:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5703:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5703:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5688:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5688:3:4"
																		},
																		"nativeSrc": "5688:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5688:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5635:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "5635:43:4"
																},
																"nativeSrc": "5635:71:4",
																"nodeType": "YulFunctionCall",
																"src": "5635:71:4"
															},
															"nativeSrc": "5635:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "5635:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5760:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5760:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5773:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5773:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5784:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5784:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5769:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5769:3:4"
																		},
																		"nativeSrc": "5769:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5769:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5716:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "5716:43:4"
																},
																"nativeSrc": "5716:72:4",
																"nodeType": "YulFunctionCall",
																"src": "5716:72:4"
															},
															"nativeSrc": "5716:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "5716:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5463:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5553:9:4",
														"nodeType": "YulTypedName",
														"src": "5553:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5565:6:4",
														"nodeType": "YulTypedName",
														"src": "5565:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5573:6:4",
														"nodeType": "YulTypedName",
														"src": "5573:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5584:4:4",
														"nodeType": "YulTypedName",
														"src": "5584:4:4",
														"type": ""
													}
												],
												"src": "5463:332:4"
											},
											{
												"body": {
													"nativeSrc": "5843:48:4",
													"nodeType": "YulBlock",
													"src": "5843:48:4",
													"statements": [
														{
															"nativeSrc": "5853:32:4",
															"nodeType": "YulAssignment",
															"src": "5853:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5878:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5878:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5871:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5871:6:4"
																		},
																		"nativeSrc": "5871:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5871:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5864:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5864:6:4"
																},
																"nativeSrc": "5864:21:4",
																"nodeType": "YulFunctionCall",
																"src": "5864:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5853:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "5853:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5801:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5825:5:4",
														"nodeType": "YulTypedName",
														"src": "5825:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5835:7:4",
														"nodeType": "YulTypedName",
														"src": "5835:7:4",
														"type": ""
													}
												],
												"src": "5801:90:4"
											},
											{
												"body": {
													"nativeSrc": "5937:76:4",
													"nodeType": "YulBlock",
													"src": "5937:76:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "5991:16:4",
																"nodeType": "YulBlock",
																"src": "5991:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6000:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6000:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6003:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6003:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5993:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5993:6:4"
																			},
																			"nativeSrc": "5993:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5993:12:4"
																		},
																		"nativeSrc": "5993:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5993:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5960:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5960:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5982:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "5982:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5967:14:4",
																					"nodeType": "YulIdentifier",
																					"src": "5967:14:4"
																				},
																				"nativeSrc": "5967:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5967:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5957:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "5957:2:4"
																		},
																		"nativeSrc": "5957:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5957:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5950:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5950:6:4"
																},
																"nativeSrc": "5950:40:4",
																"nodeType": "YulFunctionCall",
																"src": "5950:40:4"
															},
															"nativeSrc": "5947:60:4",
															"nodeType": "YulIf",
															"src": "5947:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5897:116:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5930:5:4",
														"nodeType": "YulTypedName",
														"src": "5930:5:4",
														"type": ""
													}
												],
												"src": "5897:116:4"
											},
											{
												"body": {
													"nativeSrc": "6079:77:4",
													"nodeType": "YulBlock",
													"src": "6079:77:4",
													"statements": [
														{
															"nativeSrc": "6089:22:4",
															"nodeType": "YulAssignment",
															"src": "6089:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6104:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6104:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6098:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "6098:5:4"
																},
																"nativeSrc": "6098:13:4",
																"nodeType": "YulFunctionCall",
																"src": "6098:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6089:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "6089:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6144:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "6144:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6120:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "6120:23:4"
																},
																"nativeSrc": "6120:30:4",
																"nodeType": "YulFunctionCall",
																"src": "6120:30:4"
															},
															"nativeSrc": "6120:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "6120:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "6019:137:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6057:6:4",
														"nodeType": "YulTypedName",
														"src": "6057:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6065:3:4",
														"nodeType": "YulTypedName",
														"src": "6065:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6073:5:4",
														"nodeType": "YulTypedName",
														"src": "6073:5:4",
														"type": ""
													}
												],
												"src": "6019:137:4"
											},
											{
												"body": {
													"nativeSrc": "6236:271:4",
													"nodeType": "YulBlock",
													"src": "6236:271:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "6282:83:4",
																"nodeType": "YulBlock",
																"src": "6282:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6284:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "6284:77:4"
																			},
																			"nativeSrc": "6284:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6284:79:4"
																		},
																		"nativeSrc": "6284:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6284:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6257:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "6257:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6266:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6266:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6253:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6253:3:4"
																		},
																		"nativeSrc": "6253:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6253:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6278:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6278:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6249:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6249:3:4"
																},
																"nativeSrc": "6249:32:4",
																"nodeType": "YulFunctionCall",
																"src": "6249:32:4"
															},
															"nativeSrc": "6246:119:4",
															"nodeType": "YulIf",
															"src": "6246:119:4"
														},
														{
															"nativeSrc": "6375:125:4",
															"nodeType": "YulBlock",
															"src": "6375:125:4",
															"statements": [
																{
																	"nativeSrc": "6390:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6390:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6404:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6404:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6394:6:4",
																			"nodeType": "YulTypedName",
																			"src": "6394:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6419:71:4",
																	"nodeType": "YulAssignment",
																	"src": "6419:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6462:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "6462:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6473:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "6473:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6458:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "6458:3:4"
																				},
																				"nativeSrc": "6458:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6458:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6482:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "6482:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "6429:28:4",
																			"nodeType": "YulIdentifier",
																			"src": "6429:28:4"
																		},
																		"nativeSrc": "6429:61:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6429:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6419:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "6419:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6162:345:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6206:9:4",
														"nodeType": "YulTypedName",
														"src": "6206:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6217:7:4",
														"nodeType": "YulTypedName",
														"src": "6217:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6229:6:4",
														"nodeType": "YulTypedName",
														"src": "6229:6:4",
														"type": ""
													}
												],
												"src": "6162:345:4"
											},
											{
												"body": {
													"nativeSrc": "6619:54:4",
													"nodeType": "YulBlock",
													"src": "6619:54:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6641:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6641:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6649:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6649:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6637:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6637:3:4"
																		},
																		"nativeSrc": "6637:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6637:14:4"
																	},
																	{
																		"hexValue": "4e6f2072657761726473",
																		"kind": "string",
																		"nativeSrc": "6653:12:4",
																		"nodeType": "YulLiteral",
																		"src": "6653:12:4",
																		"type": "",
																		"value": "No rewards"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6630:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6630:6:4"
																},
																"nativeSrc": "6630:36:4",
																"nodeType": "YulFunctionCall",
																"src": "6630:36:4"
															},
															"nativeSrc": "6630:36:4",
															"nodeType": "YulExpressionStatement",
															"src": "6630:36:4"
														}
													]
												},
												"name": "store_literal_in_memory_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e",
												"nativeSrc": "6513:160:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6611:6:4",
														"nodeType": "YulTypedName",
														"src": "6611:6:4",
														"type": ""
													}
												],
												"src": "6513:160:4"
											},
											{
												"body": {
													"nativeSrc": "6825:220:4",
													"nodeType": "YulBlock",
													"src": "6825:220:4",
													"statements": [
														{
															"nativeSrc": "6835:74:4",
															"nodeType": "YulAssignment",
															"src": "6835:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6901:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6901:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6906:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6906:2:4",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6842:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "6842:58:4"
																},
																"nativeSrc": "6842:67:4",
																"nodeType": "YulFunctionCall",
																"src": "6842:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6835:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6835:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7007:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7007:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e",
																	"nativeSrc": "6918:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "6918:88:4"
																},
																"nativeSrc": "6918:93:4",
																"nodeType": "YulFunctionCall",
																"src": "6918:93:4"
															},
															"nativeSrc": "6918:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "6918:93:4"
														},
														{
															"nativeSrc": "7020:19:4",
															"nodeType": "YulAssignment",
															"src": "7020:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7031:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7031:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7036:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7036:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7027:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7027:3:4"
																},
																"nativeSrc": "7027:12:4",
																"nodeType": "YulFunctionCall",
																"src": "7027:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7020:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7020:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6679:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6813:3:4",
														"nodeType": "YulTypedName",
														"src": "6813:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6821:3:4",
														"nodeType": "YulTypedName",
														"src": "6821:3:4",
														"type": ""
													}
												],
												"src": "6679:366:4"
											},
											{
												"body": {
													"nativeSrc": "7222:248:4",
													"nodeType": "YulBlock",
													"src": "7222:248:4",
													"statements": [
														{
															"nativeSrc": "7232:26:4",
															"nodeType": "YulAssignment",
															"src": "7232:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7244:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "7244:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7255:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7255:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7240:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7240:3:4"
																},
																"nativeSrc": "7240:18:4",
																"nodeType": "YulFunctionCall",
																"src": "7240:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7232:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7232:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7279:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7279:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7290:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7290:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7275:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7275:3:4"
																		},
																		"nativeSrc": "7275:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7275:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7298:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7298:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7304:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7304:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7294:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7294:3:4"
																		},
																		"nativeSrc": "7294:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7294:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7268:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7268:6:4"
																},
																"nativeSrc": "7268:47:4",
																"nodeType": "YulFunctionCall",
																"src": "7268:47:4"
															},
															"nativeSrc": "7268:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "7268:47:4"
														},
														{
															"nativeSrc": "7324:139:4",
															"nodeType": "YulAssignment",
															"src": "7324:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7458:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "7458:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7332:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "7332:124:4"
																},
																"nativeSrc": "7332:131:4",
																"nodeType": "YulFunctionCall",
																"src": "7332:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7324:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7324:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7051:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7202:9:4",
														"nodeType": "YulTypedName",
														"src": "7202:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7217:4:4",
														"nodeType": "YulTypedName",
														"src": "7217:4:4",
														"type": ""
													}
												],
												"src": "7051:419:4"
											},
											{
												"body": {
													"nativeSrc": "7630:288:4",
													"nodeType": "YulBlock",
													"src": "7630:288:4",
													"statements": [
														{
															"nativeSrc": "7640:26:4",
															"nodeType": "YulAssignment",
															"src": "7640:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7652:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "7652:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7663:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7663:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7648:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7648:3:4"
																},
																"nativeSrc": "7648:18:4",
																"nodeType": "YulFunctionCall",
																"src": "7648:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7640:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7640:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7720:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7720:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7733:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7733:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7744:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7744:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7729:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7729:3:4"
																		},
																		"nativeSrc": "7729:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7729:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7676:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "7676:43:4"
																},
																"nativeSrc": "7676:71:4",
																"nodeType": "YulFunctionCall",
																"src": "7676:71:4"
															},
															"nativeSrc": "7676:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "7676:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7801:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7801:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7814:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7814:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7825:2:4",
																				"nodeType": "YulLiteral",
																				"src": "7825:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7810:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7810:3:4"
																		},
																		"nativeSrc": "7810:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7810:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7757:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "7757:43:4"
																},
																"nativeSrc": "7757:72:4",
																"nodeType": "YulFunctionCall",
																"src": "7757:72:4"
															},
															"nativeSrc": "7757:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "7757:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7883:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7883:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7896:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7896:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7907:2:4",
																				"nodeType": "YulLiteral",
																				"src": "7907:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7892:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7892:3:4"
																		},
																		"nativeSrc": "7892:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7892:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7839:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "7839:43:4"
																},
																"nativeSrc": "7839:72:4",
																"nodeType": "YulFunctionCall",
																"src": "7839:72:4"
															},
															"nativeSrc": "7839:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "7839:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7476:442:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7586:9:4",
														"nodeType": "YulTypedName",
														"src": "7586:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7598:6:4",
														"nodeType": "YulTypedName",
														"src": "7598:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7606:6:4",
														"nodeType": "YulTypedName",
														"src": "7606:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7614:6:4",
														"nodeType": "YulTypedName",
														"src": "7614:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7625:4:4",
														"nodeType": "YulTypedName",
														"src": "7625:4:4",
														"type": ""
													}
												],
												"src": "7476:442:4"
											},
											{
												"body": {
													"nativeSrc": "8030:56:4",
													"nodeType": "YulBlock",
													"src": "8030:56:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8052:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8052:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8060:1:4",
																				"nodeType": "YulLiteral",
																				"src": "8060:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8048:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8048:3:4"
																		},
																		"nativeSrc": "8048:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8048:14:4"
																	},
																	{
																		"hexValue": "5a65726f206465706f736974",
																		"kind": "string",
																		"nativeSrc": "8064:14:4",
																		"nodeType": "YulLiteral",
																		"src": "8064:14:4",
																		"type": "",
																		"value": "Zero deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8041:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8041:6:4"
																},
																"nativeSrc": "8041:38:4",
																"nodeType": "YulFunctionCall",
																"src": "8041:38:4"
															},
															"nativeSrc": "8041:38:4",
															"nodeType": "YulExpressionStatement",
															"src": "8041:38:4"
														}
													]
												},
												"name": "store_literal_in_memory_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f",
												"nativeSrc": "7924:162:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8022:6:4",
														"nodeType": "YulTypedName",
														"src": "8022:6:4",
														"type": ""
													}
												],
												"src": "7924:162:4"
											},
											{
												"body": {
													"nativeSrc": "8238:220:4",
													"nodeType": "YulBlock",
													"src": "8238:220:4",
													"statements": [
														{
															"nativeSrc": "8248:74:4",
															"nodeType": "YulAssignment",
															"src": "8248:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8314:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8314:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8319:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8319:2:4",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8255:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "8255:58:4"
																},
																"nativeSrc": "8255:67:4",
																"nodeType": "YulFunctionCall",
																"src": "8255:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8248:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8248:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8420:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8420:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f",
																	"nativeSrc": "8331:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "8331:88:4"
																},
																"nativeSrc": "8331:93:4",
																"nodeType": "YulFunctionCall",
																"src": "8331:93:4"
															},
															"nativeSrc": "8331:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "8331:93:4"
														},
														{
															"nativeSrc": "8433:19:4",
															"nodeType": "YulAssignment",
															"src": "8433:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8444:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8444:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8449:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8449:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8440:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8440:3:4"
																},
																"nativeSrc": "8440:12:4",
																"nodeType": "YulFunctionCall",
																"src": "8440:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8433:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8433:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8092:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8226:3:4",
														"nodeType": "YulTypedName",
														"src": "8226:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8234:3:4",
														"nodeType": "YulTypedName",
														"src": "8234:3:4",
														"type": ""
													}
												],
												"src": "8092:366:4"
											},
											{
												"body": {
													"nativeSrc": "8635:248:4",
													"nodeType": "YulBlock",
													"src": "8635:248:4",
													"statements": [
														{
															"nativeSrc": "8645:26:4",
															"nodeType": "YulAssignment",
															"src": "8645:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8657:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "8657:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8668:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8668:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8653:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8653:3:4"
																},
																"nativeSrc": "8653:18:4",
																"nodeType": "YulFunctionCall",
																"src": "8653:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8645:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8645:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8692:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8692:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8703:1:4",
																				"nodeType": "YulLiteral",
																				"src": "8703:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8688:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8688:3:4"
																		},
																		"nativeSrc": "8688:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8688:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8711:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8711:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8717:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8717:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8707:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8707:3:4"
																		},
																		"nativeSrc": "8707:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8707:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8681:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8681:6:4"
																},
																"nativeSrc": "8681:47:4",
																"nodeType": "YulFunctionCall",
																"src": "8681:47:4"
															},
															"nativeSrc": "8681:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "8681:47:4"
														},
														{
															"nativeSrc": "8737:139:4",
															"nodeType": "YulAssignment",
															"src": "8737:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8871:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "8871:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8745:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "8745:124:4"
																},
																"nativeSrc": "8745:131:4",
																"nodeType": "YulFunctionCall",
																"src": "8745:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8737:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8737:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8464:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8615:9:4",
														"nodeType": "YulTypedName",
														"src": "8615:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8630:4:4",
														"nodeType": "YulTypedName",
														"src": "8630:4:4",
														"type": ""
													}
												],
												"src": "8464:419:4"
											},
											{
												"body": {
													"nativeSrc": "8933:147:4",
													"nodeType": "YulBlock",
													"src": "8933:147:4",
													"statements": [
														{
															"nativeSrc": "8943:25:4",
															"nodeType": "YulAssignment",
															"src": "8943:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8966:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8966:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8948:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "8948:17:4"
																},
																"nativeSrc": "8948:20:4",
																"nodeType": "YulFunctionCall",
																"src": "8948:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8943:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "8943:1:4"
																}
															]
														},
														{
															"nativeSrc": "8977:25:4",
															"nodeType": "YulAssignment",
															"src": "8977:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9000:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "9000:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8982:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "8982:17:4"
																},
																"nativeSrc": "8982:20:4",
																"nodeType": "YulFunctionCall",
																"src": "8982:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8977:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "8977:1:4"
																}
															]
														},
														{
															"nativeSrc": "9011:16:4",
															"nodeType": "YulAssignment",
															"src": "9011:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9022:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "9022:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9025:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "9025:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9018:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9018:3:4"
																},
																"nativeSrc": "9018:9:4",
																"nodeType": "YulFunctionCall",
																"src": "9018:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9011:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9011:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9051:22:4",
																"nodeType": "YulBlock",
																"src": "9051:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9053:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "9053:16:4"
																			},
																			"nativeSrc": "9053:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9053:18:4"
																		},
																		"nativeSrc": "9053:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "9053:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9043:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "9043:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9046:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9046:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9040:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "9040:2:4"
																},
																"nativeSrc": "9040:10:4",
																"nodeType": "YulFunctionCall",
																"src": "9040:10:4"
															},
															"nativeSrc": "9037:36:4",
															"nodeType": "YulIf",
															"src": "9037:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8889:191:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8920:1:4",
														"nodeType": "YulTypedName",
														"src": "8920:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8923:1:4",
														"nodeType": "YulTypedName",
														"src": "8923:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8929:3:4",
														"nodeType": "YulTypedName",
														"src": "8929:3:4",
														"type": ""
													}
												],
												"src": "8889:191:4"
											},
											{
												"body": {
													"nativeSrc": "9134:362:4",
													"nodeType": "YulBlock",
													"src": "9134:362:4",
													"statements": [
														{
															"nativeSrc": "9144:25:4",
															"nodeType": "YulAssignment",
															"src": "9144:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9167:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "9167:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9149:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "9149:17:4"
																},
																"nativeSrc": "9149:20:4",
																"nodeType": "YulFunctionCall",
																"src": "9149:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9144:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "9144:1:4"
																}
															]
														},
														{
															"nativeSrc": "9178:25:4",
															"nodeType": "YulAssignment",
															"src": "9178:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9201:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "9201:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9183:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "9183:17:4"
																},
																"nativeSrc": "9183:20:4",
																"nodeType": "YulFunctionCall",
																"src": "9183:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9178:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "9178:1:4"
																}
															]
														},
														{
															"nativeSrc": "9212:28:4",
															"nodeType": "YulVariableDeclaration",
															"src": "9212:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9235:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "9235:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9238:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "9238:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9231:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9231:3:4"
																},
																"nativeSrc": "9231:9:4",
																"nodeType": "YulFunctionCall",
																"src": "9231:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9216:11:4",
																	"nodeType": "YulTypedName",
																	"src": "9216:11:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9249:41:4",
															"nodeType": "YulAssignment",
															"src": "9249:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9278:11:4",
																		"nodeType": "YulIdentifier",
																		"src": "9278:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9260:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "9260:17:4"
																},
																"nativeSrc": "9260:30:4",
																"nodeType": "YulFunctionCall",
																"src": "9260:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9249:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "9249:7:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9467:22:4",
																"nodeType": "YulBlock",
																"src": "9467:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9469:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "9469:16:4"
																			},
																			"nativeSrc": "9469:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9469:18:4"
																		},
																		"nativeSrc": "9469:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "9469:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9400:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "9400:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9393:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "9393:6:4"
																				},
																				"nativeSrc": "9393:9:4",
																				"nodeType": "YulFunctionCall",
																				"src": "9393:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9423:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "9423:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9430:7:4",
																								"nodeType": "YulIdentifier",
																								"src": "9430:7:4"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9439:1:4",
																								"nodeType": "YulIdentifier",
																								"src": "9439:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9426:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "9426:3:4"
																						},
																						"nativeSrc": "9426:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "9426:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9420:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "9420:2:4"
																				},
																				"nativeSrc": "9420:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "9420:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9373:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "9373:2:4"
																		},
																		"nativeSrc": "9373:83:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9373:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9353:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9353:6:4"
																},
																"nativeSrc": "9353:113:4",
																"nodeType": "YulFunctionCall",
																"src": "9353:113:4"
															},
															"nativeSrc": "9350:139:4",
															"nodeType": "YulIf",
															"src": "9350:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9086:410:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9117:1:4",
														"nodeType": "YulTypedName",
														"src": "9117:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9120:1:4",
														"nodeType": "YulTypedName",
														"src": "9120:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9126:7:4",
														"nodeType": "YulTypedName",
														"src": "9126:7:4",
														"type": ""
													}
												],
												"src": "9086:410:4"
											},
											{
												"body": {
													"nativeSrc": "9530:152:4",
													"nodeType": "YulBlock",
													"src": "9530:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9547:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9547:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9550:77:4",
																		"nodeType": "YulLiteral",
																		"src": "9550:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9540:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9540:6:4"
																},
																"nativeSrc": "9540:88:4",
																"nodeType": "YulFunctionCall",
																"src": "9540:88:4"
															},
															"nativeSrc": "9540:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "9540:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9644:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9644:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9647:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9647:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9637:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9637:6:4"
																},
																"nativeSrc": "9637:15:4",
																"nodeType": "YulFunctionCall",
																"src": "9637:15:4"
															},
															"nativeSrc": "9637:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "9637:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9668:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9668:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9671:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9671:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9661:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9661:6:4"
																},
																"nativeSrc": "9661:15:4",
																"nodeType": "YulFunctionCall",
																"src": "9661:15:4"
															},
															"nativeSrc": "9661:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "9661:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9502:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "9502:180:4"
											},
											{
												"body": {
													"nativeSrc": "9730:143:4",
													"nodeType": "YulBlock",
													"src": "9730:143:4",
													"statements": [
														{
															"nativeSrc": "9740:25:4",
															"nodeType": "YulAssignment",
															"src": "9740:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9763:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "9763:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9745:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "9745:17:4"
																},
																"nativeSrc": "9745:20:4",
																"nodeType": "YulFunctionCall",
																"src": "9745:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9740:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "9740:1:4"
																}
															]
														},
														{
															"nativeSrc": "9774:25:4",
															"nodeType": "YulAssignment",
															"src": "9774:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9797:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "9797:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9779:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "9779:17:4"
																},
																"nativeSrc": "9779:20:4",
																"nodeType": "YulFunctionCall",
																"src": "9779:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9774:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "9774:1:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9821:22:4",
																"nodeType": "YulBlock",
																"src": "9821:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9823:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "9823:16:4"
																			},
																			"nativeSrc": "9823:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9823:18:4"
																		},
																		"nativeSrc": "9823:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "9823:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9818:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "9818:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9811:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9811:6:4"
																},
																"nativeSrc": "9811:9:4",
																"nodeType": "YulFunctionCall",
																"src": "9811:9:4"
															},
															"nativeSrc": "9808:35:4",
															"nodeType": "YulIf",
															"src": "9808:35:4"
														},
														{
															"nativeSrc": "9853:14:4",
															"nodeType": "YulAssignment",
															"src": "9853:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9862:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "9862:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9865:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "9865:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9858:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9858:3:4"
																},
																"nativeSrc": "9858:9:4",
																"nodeType": "YulFunctionCall",
																"src": "9858:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9853:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "9853:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9688:185:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9719:1:4",
														"nodeType": "YulTypedName",
														"src": "9719:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9722:1:4",
														"nodeType": "YulTypedName",
														"src": "9722:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9728:1:4",
														"nodeType": "YulTypedName",
														"src": "9728:1:4",
														"type": ""
													}
												],
												"src": "9688:185:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$225_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$225_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e(memPtr) {\n\n        mstore(add(memPtr, 0), \"No rewards\")\n\n    }\n\n    function abi_encode_t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Zero deposit\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100b2575f3560e01c80639168ae721161006f5780639168ae721461014057806393707a19146101725780639e447fc61461018e578063b6b55f25146101aa578063f2fde38b146101c6578063f7c618c1146101e2576100b2565b80632e1a7d4d146100b6578063372500ab146100d257806351ed6a30146100dc578063715018a6146100fa5780637b0a47ee146101045780638da5cb5b14610122575b5f5ffd5b6100d060048036038101906100cb9190610a67565b610200565b005b6100da610380565b005b6100e46104f4565b6040516100f19190610b0c565b60405180910390f35b610102610519565b005b61010c61052c565b6040516101199190610b34565b60405180910390f35b61012a610532565b6040516101379190610b6d565b60405180910390f35b61015a60048036038101906101559190610bb0565b610559565b60405161016993929190610bdb565b60405180910390f35b61018c60048036038101906101879190610a67565b61057f565b005b6101a860048036038101906101a39190610a67565b610629565b005b6101c460048036038101906101bf9190610a67565b61063b565b005b6101e060048036038101906101db9190610bb0565b61077d565b005b6101ea610801565b6040516101f79190610b0c565b60405180910390f35b8060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01541015610282576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027990610c6a565b60405180910390fd5b61028b33610826565b8060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8282546102d99190610cb5565b9250508190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161033c929190610ce8565b6020604051808303815f875af1158015610358573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061037c9190610d44565b5050565b61038933610826565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015490505f811161040f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040690610db9565b60405180910390fd5b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001018190555060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016104b0929190610ce8565b6020604051808303815f875af11580156104cc573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104f09190610d44565b5050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105216108e1565b61052a5f610968565b565b60035481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6004602052805f5260405f205f91509050805f0154908060010154908060020154905083565b6105876108e1565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016105e593929190610dd7565b6020604051808303815f875af1158015610601573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106259190610d44565b5050565b6106316108e1565b8060038190555050565b5f811161067d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067490610e56565b60405180910390fd5b61068633610826565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016106e493929190610dd7565b6020604051808303815f875af1158015610700573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107249190610d44565b508060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8282546107739190610e74565b9250508190555050565b6107856108e1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107f5575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107ec9190610b6d565b60405180910390fd5b6107fe81610968565b50565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f816002015411156108d4575f8160020154426108839190610cb5565b90505f670de0b6b3a7640000600354845f0154846108a19190610ea7565b6108ab9190610ea7565b6108b59190610f15565b905080836001015f8282546108ca9190610e74565b9250508190555050505b4281600201819055505050565b6108e9610a29565b73ffffffffffffffffffffffffffffffffffffffff16610907610532565b73ffffffffffffffffffffffffffffffffffffffff16146109665761092a610a29565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161095d9190610b6d565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f819050919050565b610a4681610a34565b8114610a50575f5ffd5b50565b5f81359050610a6181610a3d565b92915050565b5f60208284031215610a7c57610a7b610a30565b5b5f610a8984828501610a53565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610ad4610acf610aca84610a92565b610ab1565b610a92565b9050919050565b5f610ae582610aba565b9050919050565b5f610af682610adb565b9050919050565b610b0681610aec565b82525050565b5f602082019050610b1f5f830184610afd565b92915050565b610b2e81610a34565b82525050565b5f602082019050610b475f830184610b25565b92915050565b5f610b5782610a92565b9050919050565b610b6781610b4d565b82525050565b5f602082019050610b805f830184610b5e565b92915050565b610b8f81610b4d565b8114610b99575f5ffd5b50565b5f81359050610baa81610b86565b92915050565b5f60208284031215610bc557610bc4610a30565b5b5f610bd284828501610b9c565b91505092915050565b5f606082019050610bee5f830186610b25565b610bfb6020830185610b25565b610c086040830184610b25565b949350505050565b5f82825260208201905092915050565b7f4e6f7420656e6f756768207374616b65640000000000000000000000000000005f82015250565b5f610c54601183610c10565b9150610c5f82610c20565b602082019050919050565b5f6020820190508181035f830152610c8181610c48565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610cbf82610a34565b9150610cca83610a34565b9250828203905081811115610ce257610ce1610c88565b5b92915050565b5f604082019050610cfb5f830185610b5e565b610d086020830184610b25565b9392505050565b5f8115159050919050565b610d2381610d0f565b8114610d2d575f5ffd5b50565b5f81519050610d3e81610d1a565b92915050565b5f60208284031215610d5957610d58610a30565b5b5f610d6684828501610d30565b91505092915050565b7f4e6f2072657761726473000000000000000000000000000000000000000000005f82015250565b5f610da3600a83610c10565b9150610dae82610d6f565b602082019050919050565b5f6020820190508181035f830152610dd081610d97565b9050919050565b5f606082019050610dea5f830186610b5e565b610df76020830185610b5e565b610e046040830184610b25565b949350505050565b7f5a65726f206465706f73697400000000000000000000000000000000000000005f82015250565b5f610e40600c83610c10565b9150610e4b82610e0c565b602082019050919050565b5f6020820190508181035f830152610e6d81610e34565b9050919050565b5f610e7e82610a34565b9150610e8983610a34565b9250828201905080821115610ea157610ea0610c88565b5b92915050565b5f610eb182610a34565b9150610ebc83610a34565b9250828202610eca81610a34565b91508282048414831517610ee157610ee0610c88565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610f1f82610a34565b9150610f2a83610a34565b925082610f3a57610f39610ee8565b5b82820490509291505056fea26469706673582212207e1d56d2574452075b752103cd7571da782bb8fb94aeca8942c69df9bf13b22564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9168AE72 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x93707A19 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x1E2 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x51ED6A30 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x122 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0x200 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDA PUSH2 0x380 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE4 PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x102 PUSH2 0x519 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10C PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xB6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xBB0 JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x169 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0xBB0 JUMP JUMPDEST PUSH2 0x77D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EA PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x282 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x279 SWAP1 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28B CALLER PUSH2 0x826 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0xCB5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33C SWAP3 SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x358 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0xD44 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x389 CALLER PUSH2 0x826 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x40F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x406 SWAP1 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP3 SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4CC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0xD44 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x8E1 JUMP JUMPDEST PUSH2 0x52A PUSH0 PUSH2 0x968 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x587 PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x601 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x625 SWAP2 SWAP1 PUSH2 0xD44 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x631 PUSH2 0x8E1 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x674 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x686 CALLER PUSH2 0x826 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x700 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x724 SWAP2 SWAP1 PUSH2 0xD44 JUMP JUMPDEST POP DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x773 SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x785 PUSH2 0x8E1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7F5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EC SWAP2 SWAP1 PUSH2 0xB6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7FE DUP2 PUSH2 0x968 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x8D4 JUMPI PUSH0 DUP2 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x883 SWAP2 SWAP1 PUSH2 0xCB5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SLOAD DUP5 PUSH0 ADD SLOAD DUP5 PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x8E9 PUSH2 0xA29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x907 PUSH2 0x532 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x966 JUMPI PUSH2 0x92A PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95D SWAP2 SWAP1 PUSH2 0xB6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA46 DUP2 PUSH2 0xA34 JUMP JUMPDEST DUP2 EQ PUSH2 0xA50 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA61 DUP2 PUSH2 0xA3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7C JUMPI PUSH2 0xA7B PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA89 DUP5 DUP3 DUP6 ADD PUSH2 0xA53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAD4 PUSH2 0xACF PUSH2 0xACA DUP5 PUSH2 0xA92 JUMP JUMPDEST PUSH2 0xAB1 JUMP JUMPDEST PUSH2 0xA92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAE5 DUP3 PUSH2 0xABA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAF6 DUP3 PUSH2 0xADB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB06 DUP2 PUSH2 0xAEC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB1F PUSH0 DUP4 ADD DUP5 PUSH2 0xAFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB2E DUP2 PUSH2 0xA34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB47 PUSH0 DUP4 ADD DUP5 PUSH2 0xB25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB57 DUP3 PUSH2 0xA92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB67 DUP2 PUSH2 0xB4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB80 PUSH0 DUP4 ADD DUP5 PUSH2 0xB5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB8F DUP2 PUSH2 0xB4D JUMP JUMPDEST DUP2 EQ PUSH2 0xB99 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAA DUP2 PUSH2 0xB86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC5 JUMPI PUSH2 0xBC4 PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBD2 DUP5 DUP3 DUP6 ADD PUSH2 0xB9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xBEE PUSH0 DUP4 ADD DUP7 PUSH2 0xB25 JUMP JUMPDEST PUSH2 0xBFB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB25 JUMP JUMPDEST PUSH2 0xC08 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB25 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768207374616B6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC54 PUSH1 0x11 DUP4 PUSH2 0xC10 JUMP JUMPDEST SWAP2 POP PUSH2 0xC5F DUP3 PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC81 DUP2 PUSH2 0xC48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xCBF DUP3 PUSH2 0xA34 JUMP JUMPDEST SWAP2 POP PUSH2 0xCCA DUP4 PUSH2 0xA34 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xCE2 JUMPI PUSH2 0xCE1 PUSH2 0xC88 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCFB PUSH0 DUP4 ADD DUP6 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0xD08 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB25 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD23 DUP2 PUSH2 0xD0F JUMP JUMPDEST DUP2 EQ PUSH2 0xD2D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD3E DUP2 PUSH2 0xD1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD59 JUMPI PUSH2 0xD58 PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD66 DUP5 DUP3 DUP6 ADD PUSH2 0xD30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647300000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDA3 PUSH1 0xA DUP4 PUSH2 0xC10 JUMP JUMPDEST SWAP2 POP PUSH2 0xDAE DUP3 PUSH2 0xD6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDD0 DUP2 PUSH2 0xD97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDEA PUSH0 DUP4 ADD DUP7 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0xDF7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0xE04 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB25 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5A65726F206465706F7369740000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE40 PUSH1 0xC DUP4 PUSH2 0xC10 JUMP JUMPDEST SWAP2 POP PUSH2 0xE4B DUP3 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE6D DUP2 PUSH2 0xE34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE7E DUP3 PUSH2 0xA34 JUMP JUMPDEST SWAP2 POP PUSH2 0xE89 DUP4 PUSH2 0xA34 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEA1 JUMPI PUSH2 0xEA0 PUSH2 0xC88 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEB1 DUP3 PUSH2 0xA34 JUMP JUMPDEST SWAP2 POP PUSH2 0xEBC DUP4 PUSH2 0xA34 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xECA DUP2 PUSH2 0xA34 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xEE1 JUMPI PUSH2 0xEE0 PUSH2 0xC88 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF1F DUP3 PUSH2 0xA34 JUMP JUMPDEST SWAP2 POP PUSH2 0xF2A DUP4 PUSH2 0xA34 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF3A JUMPI PUSH2 0xF39 PUSH2 0xEE8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x1D56D2574452075B752103CD7571DA782BB8FB94AECA8942C69DF9BF13B225 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "177:1945:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;963:264;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1235:276;;;:::i;:::-;;215:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;280:32:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;476:41:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1883:134;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2025:94;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;705:250;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;246:25:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;963:264;1056:6;1025:7;:19;1033:10;1025:19;;;;;;;;;;;;;;;:27;;;:37;;1017:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1095:26;1110:10;1095:14;:26::i;:::-;1163:6;1132:7;:19;1140:10;1132:19;;;;;;;;;;;;;;;:27;;;:37;;;;;;;:::i;:::-;;;;;;;;1180:10;;;;;;;;;;;:19;;;1200:10;1212:6;1180:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;963:264;:::o;1235:276::-;1279:26;1294:10;1279:14;:26::i;:::-;1316:14;1333:7;:19;1341:10;1333:19;;;;;;;;;;;;;;;:30;;;1316:47;;1391:1;1382:6;:10;1374:33;;;;;;;;;;;;:::i;:::-;;;;;;;;;1451:1;1418:7;:19;1426:10;1418:19;;;;;;;;;;;;;;;:30;;:34;;;;1463:11;;;;;;;;;;;:20;;;1484:10;1496:6;1463:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1268:243;1235:276::o;215:24::-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;280:32:3:-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;476:41:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1883:134::-;1531:13:0;:11;:13::i;:::-;1950:11:3::1;;;;;;;;;;;:24;;;1975:10;1995:4;2002:6;1950:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1883:134:::0;:::o;2025:94::-;1531:13:0;:11;:13::i;:::-;2106:5:3::1;2093:10;:18;;;;2025:94:::0;:::o;705:250::-;775:1;766:6;:10;758:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;804:26;819:10;804:14;:26::i;:::-;841:10;;;;;;;;;;;:23;;;865:10;885:4;892:6;841:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;941:6;910:7;:19;918:10;910:19;;;;;;;;;;;;;;;:27;;;:37;;;;;;;:::i;:::-;;;;;;;;705:250;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;246:25:3:-;;;;;;;;;;;;;:::o;1519:356::-;1577:16;1596:7;:13;1604:4;1596:13;;;;;;;;;;;;;;;1577:32;;1639:1;1624;:12;;;:16;1620:207;;;1657:16;1694:1;:12;;;1676:15;:30;;;;:::i;:::-;1657:49;;1721:14;1774:4;1761:10;;1749:1;:9;;;1738:8;:20;;;;:::i;:::-;:33;;;;:::i;:::-;:40;;;;:::i;:::-;1721:57;;1809:6;1793:1;:12;;;:22;;;;;;;:::i;:::-;;;;;;;;1642:185;;1620:207;1852:15;1837:1;:12;;:30;;;;1566:309;1519:356;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;88:117:4:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:60::-;1185:3;1206:5;1199:12;;1157:60;;;:::o;1223:142::-;1273:9;1306:53;1324:34;1333:24;1351:5;1333:24;:::i;:::-;1324:34;:::i;:::-;1306:53;:::i;:::-;1293:66;;1223:142;;;:::o;1371:126::-;1421:9;1454:37;1485:5;1454:37;:::i;:::-;1441:50;;1371:126;;;:::o;1503:140::-;1567:9;1600:37;1631:5;1600:37;:::i;:::-;1587:50;;1503:140;;;:::o;1649:159::-;1750:51;1795:5;1750:51;:::i;:::-;1745:3;1738:64;1649:159;;:::o;1814:250::-;1921:4;1959:2;1948:9;1944:18;1936:26;;1972:85;2054:1;2043:9;2039:17;2030:6;1972:85;:::i;:::-;1814:250;;;;:::o;2070:118::-;2157:24;2175:5;2157:24;:::i;:::-;2152:3;2145:37;2070:118;;:::o;2194:222::-;2287:4;2325:2;2314:9;2310:18;2302:26;;2338:71;2406:1;2395:9;2391:17;2382:6;2338:71;:::i;:::-;2194:222;;;;:::o;2422:96::-;2459:7;2488:24;2506:5;2488:24;:::i;:::-;2477:35;;2422:96;;;:::o;2524:118::-;2611:24;2629:5;2611:24;:::i;:::-;2606:3;2599:37;2524:118;;:::o;2648:222::-;2741:4;2779:2;2768:9;2764:18;2756:26;;2792:71;2860:1;2849:9;2845:17;2836:6;2792:71;:::i;:::-;2648:222;;;;:::o;2876:122::-;2949:24;2967:5;2949:24;:::i;:::-;2942:5;2939:35;2929:63;;2988:1;2985;2978:12;2929:63;2876:122;:::o;3004:139::-;3050:5;3088:6;3075:20;3066:29;;3104:33;3131:5;3104:33;:::i;:::-;3004:139;;;;:::o;3149:329::-;3208:6;3257:2;3245:9;3236:7;3232:23;3228:32;3225:119;;;3263:79;;:::i;:::-;3225:119;3383:1;3408:53;3453:7;3444:6;3433:9;3429:22;3408:53;:::i;:::-;3398:63;;3354:117;3149:329;;;;:::o;3484:442::-;3633:4;3671:2;3660:9;3656:18;3648:26;;3684:71;3752:1;3741:9;3737:17;3728:6;3684:71;:::i;:::-;3765:72;3833:2;3822:9;3818:18;3809:6;3765:72;:::i;:::-;3847;3915:2;3904:9;3900:18;3891:6;3847:72;:::i;:::-;3484:442;;;;;;:::o;3932:169::-;4016:11;4050:6;4045:3;4038:19;4090:4;4085:3;4081:14;4066:29;;3932:169;;;;:::o;4107:167::-;4247:19;4243:1;4235:6;4231:14;4224:43;4107:167;:::o;4280:366::-;4422:3;4443:67;4507:2;4502:3;4443:67;:::i;:::-;4436:74;;4519:93;4608:3;4519:93;:::i;:::-;4637:2;4632:3;4628:12;4621:19;;4280:366;;;:::o;4652:419::-;4818:4;4856:2;4845:9;4841:18;4833:26;;4905:9;4899:4;4895:20;4891:1;4880:9;4876:17;4869:47;4933:131;5059:4;4933:131;:::i;:::-;4925:139;;4652:419;;;:::o;5077:180::-;5125:77;5122:1;5115:88;5222:4;5219:1;5212:15;5246:4;5243:1;5236:15;5263:194;5303:4;5323:20;5341:1;5323:20;:::i;:::-;5318:25;;5357:20;5375:1;5357:20;:::i;:::-;5352:25;;5401:1;5398;5394:9;5386:17;;5425:1;5419:4;5416:11;5413:37;;;5430:18;;:::i;:::-;5413:37;5263:194;;;;:::o;5463:332::-;5584:4;5622:2;5611:9;5607:18;5599:26;;5635:71;5703:1;5692:9;5688:17;5679:6;5635:71;:::i;:::-;5716:72;5784:2;5773:9;5769:18;5760:6;5716:72;:::i;:::-;5463:332;;;;;:::o;5801:90::-;5835:7;5878:5;5871:13;5864:21;5853:32;;5801:90;;;:::o;5897:116::-;5967:21;5982:5;5967:21;:::i;:::-;5960:5;5957:32;5947:60;;6003:1;6000;5993:12;5947:60;5897:116;:::o;6019:137::-;6073:5;6104:6;6098:13;6089:22;;6120:30;6144:5;6120:30;:::i;:::-;6019:137;;;;:::o;6162:345::-;6229:6;6278:2;6266:9;6257:7;6253:23;6249:32;6246:119;;;6284:79;;:::i;:::-;6246:119;6404:1;6429:61;6482:7;6473:6;6462:9;6458:22;6429:61;:::i;:::-;6419:71;;6375:125;6162:345;;;;:::o;6513:160::-;6653:12;6649:1;6641:6;6637:14;6630:36;6513:160;:::o;6679:366::-;6821:3;6842:67;6906:2;6901:3;6842:67;:::i;:::-;6835:74;;6918:93;7007:3;6918:93;:::i;:::-;7036:2;7031:3;7027:12;7020:19;;6679:366;;;:::o;7051:419::-;7217:4;7255:2;7244:9;7240:18;7232:26;;7304:9;7298:4;7294:20;7290:1;7279:9;7275:17;7268:47;7332:131;7458:4;7332:131;:::i;:::-;7324:139;;7051:419;;;:::o;7476:442::-;7625:4;7663:2;7652:9;7648:18;7640:26;;7676:71;7744:1;7733:9;7729:17;7720:6;7676:71;:::i;:::-;7757:72;7825:2;7814:9;7810:18;7801:6;7757:72;:::i;:::-;7839;7907:2;7896:9;7892:18;7883:6;7839:72;:::i;:::-;7476:442;;;;;;:::o;7924:162::-;8064:14;8060:1;8052:6;8048:14;8041:38;7924:162;:::o;8092:366::-;8234:3;8255:67;8319:2;8314:3;8255:67;:::i;:::-;8248:74;;8331:93;8420:3;8331:93;:::i;:::-;8449:2;8444:3;8440:12;8433:19;;8092:366;;;:::o;8464:419::-;8630:4;8668:2;8657:9;8653:18;8645:26;;8717:9;8711:4;8707:20;8703:1;8692:9;8688:17;8681:47;8745:131;8871:4;8745:131;:::i;:::-;8737:139;;8464:419;;;:::o;8889:191::-;8929:3;8948:20;8966:1;8948:20;:::i;:::-;8943:25;;8982:20;9000:1;8982:20;:::i;:::-;8977:25;;9025:1;9022;9018:9;9011:16;;9046:3;9043:1;9040:10;9037:36;;;9053:18;;:::i;:::-;9037:36;8889:191;;;;:::o;9086:410::-;9126:7;9149:20;9167:1;9149:20;:::i;:::-;9144:25;;9183:20;9201:1;9183:20;:::i;:::-;9178:25;;9238:1;9235;9231:9;9260:30;9278:11;9260:30;:::i;:::-;9249:41;;9439:1;9430:7;9426:15;9423:1;9420:22;9400:1;9393:9;9373:83;9350:139;;9469:18;;:::i;:::-;9350:139;9134:362;9086:410;;;;:::o;9502:180::-;9550:77;9547:1;9540:88;9647:4;9644:1;9637:15;9671:4;9668:1;9661:15;9688:185;9728:1;9745:20;9763:1;9745:20;:::i;:::-;9740:25;;9779:20;9797:1;9779:20;:::i;:::-;9774:25;;9818:1;9808:35;;9823:18;;:::i;:::-;9808:35;9865:1;9862;9858:9;9853:14;;9688:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "792600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claimRewards()": "infinite",
								"deposit(uint256)": "infinite",
								"fundRewards(uint256)": "infinite",
								"owner()": "2625",
								"renounceOwnership()": "infinite",
								"rewardRate()": "2514",
								"rewardToken()": "infinite",
								"setRewardRate(uint256)": "infinite",
								"stakeToken()": "infinite",
								"stakers(address)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_updateRewards(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 177,
									"end": 2122,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 177,
									"end": 2122,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 177,
									"end": 2122,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 308,
									"end": 312,
									"name": "PUSH",
									"source": 3,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 280,
									"end": 312,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 280,
									"end": 312,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 697,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 697,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 697,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 697,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 526,
									"end": 697,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 526,
									"end": 697,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 526,
									"end": 697,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 526,
									"end": 697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 526,
									"end": 697,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 589,
									"end": 599,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 632,
									"end": 643,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 612,
									"end": 622,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 612,
									"end": 622,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 644,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 612,
									"end": 644,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 612,
									"end": 644,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 612,
									"end": 644,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 612,
									"end": 644,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 612,
									"end": 644,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 612,
									"end": 644,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 612,
									"end": 644,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 612,
									"end": 644,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 612,
									"end": 644,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 612,
									"end": 644,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 612,
									"end": 644,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 612,
									"end": 644,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 612,
									"end": 644,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 612,
									"end": 644,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 612,
									"end": 644,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 612,
									"end": 644,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 612,
									"end": 644,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 676,
									"end": 688,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 655,
									"end": 666,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 655,
									"end": 666,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 655,
									"end": 689,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 655,
									"end": 689,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 655,
									"end": 689,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 655,
									"end": 689,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 655,
									"end": 689,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 655,
									"end": 689,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 655,
									"end": 689,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 655,
									"end": 689,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 655,
									"end": 689,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 655,
									"end": 689,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 655,
									"end": 689,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 655,
									"end": 689,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 655,
									"end": 689,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 655,
									"end": 689,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 655,
									"end": 689,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 655,
									"end": 689,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 655,
									"end": 689,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 655,
									"end": 689,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 526,
									"end": 697,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 177,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 177,
									"end": 2122,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 177,
									"end": 2122,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 177,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 177,
									"end": 2122,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 2122,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 177,
									"end": 2122,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 2122,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 2122,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 177,
									"end": 2122,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 2122,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207e1d56d2574452075b752103cd7571da782bb8fb94aeca8942c69df9bf13b22564736f6c634300081e0033",
									".code": [
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "9168AE72"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "9168AE72"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "93707A19"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "9E447FC6"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "B6B55F25"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "F7C618C1"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "2E1A7D4D"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "372500AB"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "51ED6A30"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "7B0A47EE"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 2122,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 963,
											"end": 1227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 963,
											"end": 1227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1511,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1235,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1235,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1235,
											"end": 1511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1511,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1235,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1511,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 215,
											"end": 239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 215,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 215,
											"end": 239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 215,
											"end": 239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 239,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 215,
											"end": 239,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 215,
											"end": 239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 215,
											"end": 239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 239,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 280,
											"end": 312,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 280,
											"end": 312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 280,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 280,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 280,
											"end": 312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 280,
											"end": 312,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 280,
											"end": 312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 280,
											"end": 312,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 280,
											"end": 312,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 280,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 280,
											"end": 312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 280,
											"end": 312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 280,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 280,
											"end": 312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 280,
											"end": 312,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 280,
											"end": 312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 280,
											"end": 312,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 280,
											"end": 312,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 280,
											"end": 312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 280,
											"end": 312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 280,
											"end": 312,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 280,
											"end": 312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 280,
											"end": 312,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 476,
											"end": 517,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 476,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 476,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 476,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1883,
											"end": 2017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1883,
											"end": 2017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2025,
											"end": 2119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2025,
											"end": 2119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 705,
											"end": 955,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 705,
											"end": 955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 705,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 705,
											"end": 955,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 705,
											"end": 955,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 705,
											"end": 955,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 705,
											"end": 955,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 705,
											"end": 955,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 705,
											"end": 955,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 705,
											"end": 955,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 705,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 705,
											"end": 955,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 705,
											"end": 955,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 705,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 705,
											"end": 955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 705,
											"end": 955,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 705,
											"end": 955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 705,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 705,
											"end": 955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 705,
											"end": 955,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 705,
											"end": 955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 705,
											"end": 955,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 246,
											"end": 271,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 246,
											"end": 271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 246,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 246,
											"end": 271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 246,
											"end": 271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 271,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 246,
											"end": 271,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 246,
											"end": 271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 246,
											"end": 271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 271,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1032,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1025,
											"end": 1044,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1043,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1044,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1044,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1044,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1044,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1044,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1044,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1044,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1044,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1044,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1044,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1044,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1044,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1044,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1044,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1052,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1052,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1062,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1062,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1017,
											"end": 1084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1017,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1095,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1110,
											"end": 1120,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1095,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1095,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1095,
											"end": 1121,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1095,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1163,
											"end": 1169,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1139,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1132,
											"end": 1151,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 1150,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1151,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1132,
											"end": 1151,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1151,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1132,
											"end": 1151,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1151,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1151,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1151,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1151,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1151,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1151,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1151,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1151,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1151,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1151,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1151,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1169,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1169,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1169,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1132,
											"end": 1169,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1169,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1132,
											"end": 1169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1169,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1132,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1169,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1169,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1169,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1169,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1199,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1199,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1199,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1200,
											"end": 1210,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1218,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1180,
											"end": 1219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1180,
											"end": 1219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1219,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1511,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1235,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1279,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1279,
											"end": 1305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1316,
											"end": 1330,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1333,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1351,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1333,
											"end": 1352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1333,
											"end": 1352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1352,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1352,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1352,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1363,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1333,
											"end": 1363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1363,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1316,
											"end": 1363,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1316,
											"end": 1363,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1392,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1388,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1392,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1374,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1374,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1451,
											"end": 1452,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1425,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1418,
											"end": 1437,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1436,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1437,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1418,
											"end": 1437,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1437,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1418,
											"end": 1437,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1437,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1437,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1437,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1437,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1437,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1437,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1437,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1437,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1448,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1418,
											"end": 1448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1452,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1474,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1463,
											"end": 1474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1474,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1474,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1463,
											"end": 1474,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1474,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1474,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1463,
											"end": 1474,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1483,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1463,
											"end": 1483,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1483,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1484,
											"end": 1494,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1463,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1463,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 215,
											"end": 239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 215,
											"end": 239,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 215,
											"end": 239,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 215,
											"end": 239,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 215,
											"end": 239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 280,
											"end": 312,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 280,
											"end": 312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 280,
											"end": 312,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 280,
											"end": 312,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 280,
											"end": 312,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 280,
											"end": 312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 476,
											"end": 517,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 476,
											"end": 517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 476,
											"end": 517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1950,
											"end": 1961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1961,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1961,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1961,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1950,
											"end": 1961,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1961,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1961,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1961,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1974,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1975,
											"end": 1985,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 1999,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2008,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1950,
											"end": 2009,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1950,
											"end": 2009,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2009,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 2017,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 2017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2106,
											"end": 2111,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2093,
											"end": 2103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2093,
											"end": 2111,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2093,
											"end": 2111,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2093,
											"end": 2111,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2093,
											"end": 2111,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 705,
											"end": 955,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 705,
											"end": 955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 775,
											"end": 776,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 766,
											"end": 776,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 758,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 758,
											"end": 793,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 758,
											"end": 793,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 793,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 793,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 758,
											"end": 793,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 758,
											"end": 793,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 758,
											"end": 793,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 758,
											"end": 793,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 758,
											"end": 793,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 758,
											"end": 793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 758,
											"end": 793,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 758,
											"end": 793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 758,
											"end": 793,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 793,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 793,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 793,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 758,
											"end": 793,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 758,
											"end": 793,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 793,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 758,
											"end": 793,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 758,
											"end": 793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 804,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 819,
											"end": 829,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 804,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 804,
											"end": 830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 830,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 804,
											"end": 830,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 841,
											"end": 851,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 841,
											"end": 851,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 851,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 841,
											"end": 851,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 841,
											"end": 851,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 841,
											"end": 851,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 841,
											"end": 851,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 851,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 841,
											"end": 851,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 841,
											"end": 851,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 841,
											"end": 851,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 841,
											"end": 864,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 841,
											"end": 864,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 841,
											"end": 864,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 865,
											"end": 875,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 885,
											"end": 889,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 892,
											"end": 898,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 841,
											"end": 899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 841,
											"end": 899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 841,
											"end": 899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 841,
											"end": 899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 941,
											"end": 947,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 910,
											"end": 917,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 910,
											"end": 929,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 928,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 910,
											"end": 929,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 910,
											"end": 929,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 910,
											"end": 929,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 910,
											"end": 929,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 910,
											"end": 929,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 910,
											"end": 929,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 910,
											"end": 929,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 910,
											"end": 929,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 910,
											"end": 929,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 910,
											"end": 929,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 910,
											"end": 929,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 910,
											"end": 929,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 910,
											"end": 929,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 910,
											"end": 929,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 929,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 910,
											"end": 937,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 937,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 910,
											"end": 937,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 910,
											"end": 947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 910,
											"end": 947,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 910,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 910,
											"end": 947,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 910,
											"end": 947,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 910,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 910,
											"end": 947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 910,
											"end": 947,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 910,
											"end": 947,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 910,
											"end": 947,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 910,
											"end": 947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 910,
											"end": 947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 910,
											"end": 947,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 910,
											"end": 947,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 910,
											"end": 947,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 910,
											"end": 947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 705,
											"end": 955,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 705,
											"end": 955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 246,
											"end": 271,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 246,
											"end": 271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 246,
											"end": 271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 246,
											"end": 271,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 246,
											"end": 271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 246,
											"end": 271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1519,
											"end": 1875,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1519,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1593,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1596,
											"end": 1603,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1608,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1609,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1625,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1636,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1624,
											"end": 1636,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1636,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1640,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1620,
											"end": 1827,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1620,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1620,
											"end": 1827,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1657,
											"end": 1673,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1694,
											"end": 1695,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1694,
											"end": 1706,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1694,
											"end": 1706,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1694,
											"end": 1706,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1691,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1676,
											"end": 1706,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1706,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1676,
											"end": 1706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1706,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1676,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1657,
											"end": 1706,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1657,
											"end": 1706,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1778,
											"name": "PUSH",
											"source": 3,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1761,
											"end": 1771,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1761,
											"end": 1771,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1749,
											"end": 1750,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1746,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1738,
											"end": 1758,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1738,
											"end": 1758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1758,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1738,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1738,
											"end": 1771,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1771,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1738,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1771,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1738,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1738,
											"end": 1778,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1778,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1738,
											"end": 1778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1778,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1738,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1721,
											"end": 1778,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1721,
											"end": 1778,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1809,
											"end": 1815,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1805,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1793,
											"end": 1805,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1805,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1793,
											"end": 1815,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1815,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1815,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1793,
											"end": 1815,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1793,
											"end": 1815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1815,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1793,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1815,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1815,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1620,
											"end": 1827,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1620,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1852,
											"end": 1867,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1838,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1837,
											"end": 1849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1566,
											"end": 1875,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1519,
											"end": 1875,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1519,
											"end": 1875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1188,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1199,
											"end": 1211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1199,
											"end": 1211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1273,
											"end": 1282,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1333,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1333,
											"end": 1357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1357,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1333,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1324,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1306,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1306,
											"end": 1359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1306,
											"end": 1359,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1306,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 1485,
											"end": 1490,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1454,
											"end": 1491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1491,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1371,
											"end": 1497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1503,
											"end": 1643,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1503,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1567,
											"end": 1576,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 1631,
											"end": 1636,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1600,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1600,
											"end": 1637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1600,
											"end": 1637,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 1600,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1637,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1637,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1503,
											"end": 1643,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1503,
											"end": 1643,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1503,
											"end": 1643,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1503,
											"end": 1643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1808,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1649,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1750,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1795,
											"end": 1800,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1750,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1750,
											"end": 1801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1750,
											"end": 1801,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1750,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1748,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 1802,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 2064,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1814,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 1925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1961,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1948,
											"end": 1957,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1936,
											"end": 1962,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1936,
											"end": 1962,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2054,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2052,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2056,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2030,
											"end": 2036,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1972,
											"end": 2057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2057,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1972,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 2064,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 2064,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 2064,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 2064,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 2064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2070,
											"end": 2188,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2070,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2157,
											"end": 2181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2070,
											"end": 2188,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2070,
											"end": 2188,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2070,
											"end": 2188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2291,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2314,
											"end": 2323,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2310,
											"end": 2328,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2302,
											"end": 2328,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2302,
											"end": 2328,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2404,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2382,
											"end": 2388,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2338,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2409,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2338,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2459,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2506,
											"end": 2511,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2488,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2422,
											"end": 2518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2629,
											"end": 2634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2611,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2609,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2636,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2524,
											"end": 2642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2745,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2860,
											"end": 2861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2858,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2845,
											"end": 2862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2792,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 2998,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2876,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2967,
											"end": 2972,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2949,
											"end": 2973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2942,
											"end": 2947,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2974,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 2986,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 2998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 2998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3095,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 3131,
											"end": 3136,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3104,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3208,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3245,
											"end": 3254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3243,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3255,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3260,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3263,
											"end": 3342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 3453,
											"end": 3460,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3433,
											"end": 3442,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3451,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3408,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3461,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3461,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3354,
											"end": 3471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3149,
											"end": 3478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3926,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3484,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3637,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3671,
											"end": 3673,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3660,
											"end": 3669,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3656,
											"end": 3674,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3648,
											"end": 3674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3648,
											"end": 3674,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 3752,
											"end": 3753,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3750,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3737,
											"end": 3754,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3728,
											"end": 3734,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3684,
											"end": 3755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3755,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 3684,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3765,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3822,
											"end": 3831,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 3836,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3809,
											"end": 3815,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3765,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3765,
											"end": 3837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3765,
											"end": 3837,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3765,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3904,
											"end": 3913,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3900,
											"end": 3918,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3847,
											"end": 3919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3919,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 3847,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3926,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3926,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3926,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3926,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3926,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3926,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4016,
											"end": 4027,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4056,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4048,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4057,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4090,
											"end": 4094,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4085,
											"end": 4088,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4081,
											"end": 4095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4066,
											"end": 4095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4066,
											"end": 4095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4274,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4107,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4247,
											"end": 4266,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F7420656E6F756768207374616B6564000000000000000000000000000000"
										},
										{
											"begin": 4243,
											"end": 4244,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4235,
											"end": 4241,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4231,
											"end": 4245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4267,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4274,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4280,
											"end": 4646,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4280,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4422,
											"end": 4425,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 4507,
											"end": 4509,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4502,
											"end": 4505,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4443,
											"end": 4510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4510,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 4443,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4510,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4519,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 4608,
											"end": 4611,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4519,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4519,
											"end": 4612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4519,
											"end": 4612,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 4519,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4639,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4632,
											"end": 4635,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4628,
											"end": 4640,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4621,
											"end": 4640,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4621,
											"end": 4640,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4280,
											"end": 4646,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4280,
											"end": 4646,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4280,
											"end": 4646,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4280,
											"end": 4646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4652,
											"end": 5071,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4652,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4856,
											"end": 4858,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4845,
											"end": 4854,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4859,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4833,
											"end": 4859,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4833,
											"end": 4859,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 4914,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4899,
											"end": 4903,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4895,
											"end": 4915,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 4892,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 4889,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4876,
											"end": 4893,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4869,
											"end": 4916,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4933,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 5059,
											"end": 5063,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4933,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4933,
											"end": 5064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4933,
											"end": 5064,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 4933,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4925,
											"end": 5064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4925,
											"end": 5064,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4652,
											"end": 5071,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4652,
											"end": 5071,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4652,
											"end": 5071,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4652,
											"end": 5071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5257,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 5077,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5202,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5115,
											"end": 5203,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5222,
											"end": 5226,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5219,
											"end": 5220,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5212,
											"end": 5227,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5250,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5243,
											"end": 5244,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5236,
											"end": 5251,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5263,
											"end": 5457,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5263,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5303,
											"end": 5307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5323,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 5341,
											"end": 5342,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5323,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 5323,
											"end": 5343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5323,
											"end": 5343,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 5323,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5357,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 5375,
											"end": 5376,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5357,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 5357,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5357,
											"end": 5377,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 5357,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5352,
											"end": 5377,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5352,
											"end": 5377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5401,
											"end": 5402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5398,
											"end": 5399,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5394,
											"end": 5403,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5386,
											"end": 5403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5386,
											"end": 5403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5426,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5419,
											"end": 5423,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5416,
											"end": 5427,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5413,
											"end": 5450,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5413,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 5413,
											"end": 5450,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5430,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 5430,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 5430,
											"end": 5448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5430,
											"end": 5448,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 5430,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5413,
											"end": 5450,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 5413,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5263,
											"end": 5457,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5263,
											"end": 5457,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5263,
											"end": 5457,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5263,
											"end": 5457,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5263,
											"end": 5457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5795,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5463,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5584,
											"end": 5588,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5624,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5599,
											"end": 5625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5599,
											"end": 5625,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5635,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 5703,
											"end": 5704,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5701,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5685,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5635,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5635,
											"end": 5706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5635,
											"end": 5706,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 5635,
											"end": 5706,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5716,
											"end": 5788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 5784,
											"end": 5786,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5773,
											"end": 5782,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5769,
											"end": 5787,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5760,
											"end": 5766,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5716,
											"end": 5788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5716,
											"end": 5788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5716,
											"end": 5788,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 5716,
											"end": 5788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5795,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5795,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5801,
											"end": 5891,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5801,
											"end": 5891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5878,
											"end": 5883,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 5884,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5864,
											"end": 5885,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5853,
											"end": 5885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5853,
											"end": 5885,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5801,
											"end": 5891,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5801,
											"end": 5891,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5801,
											"end": 5891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5801,
											"end": 5891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5897,
											"end": 6013,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5897,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5967,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 5982,
											"end": 5987,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5967,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5967,
											"end": 5988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5967,
											"end": 5988,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 5967,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5960,
											"end": 5965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5957,
											"end": 5989,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5947,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 5947,
											"end": 6007,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6003,
											"end": 6004,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6000,
											"end": 6001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5993,
											"end": 6005,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5947,
											"end": 6007,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 5947,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5897,
											"end": 6013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5897,
											"end": 6013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6156,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 6019,
											"end": 6156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6073,
											"end": 6078,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6098,
											"end": 6111,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6089,
											"end": 6111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6089,
											"end": 6111,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6120,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 6144,
											"end": 6149,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6120,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 6120,
											"end": 6150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6120,
											"end": 6150,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 6120,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6156,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6162,
											"end": 6507,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 6162,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6229,
											"end": 6235,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6278,
											"end": 6280,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6266,
											"end": 6275,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6257,
											"end": 6264,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6253,
											"end": 6276,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 6246,
											"end": 6365,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6246,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 6246,
											"end": 6365,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 6284,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 6284,
											"end": 6363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6363,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 6284,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6246,
											"end": 6365,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 6246,
											"end": 6365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6404,
											"end": 6405,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 6482,
											"end": 6489,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6473,
											"end": 6479,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6462,
											"end": 6471,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6458,
											"end": 6480,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6429,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 6429,
											"end": 6490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6429,
											"end": 6490,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 6429,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6419,
											"end": 6490,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6419,
											"end": 6490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6375,
											"end": 6500,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6162,
											"end": 6507,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6162,
											"end": 6507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6162,
											"end": 6507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6162,
											"end": 6507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6162,
											"end": 6507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6513,
											"end": 6673,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 6513,
											"end": 6673,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6653,
											"end": 6665,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F207265776172647300000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6650,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6641,
											"end": 6647,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6637,
											"end": 6651,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6630,
											"end": 6666,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6513,
											"end": 6673,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6513,
											"end": 6673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6679,
											"end": 7045,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 6679,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6821,
											"end": 6824,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6842,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 6906,
											"end": 6908,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 6901,
											"end": 6904,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6842,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 6842,
											"end": 6909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6842,
											"end": 6909,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 6842,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6835,
											"end": 6909,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6835,
											"end": 6909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6918,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 7007,
											"end": 7010,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6918,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 6918,
											"end": 7011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6918,
											"end": 7011,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 6918,
											"end": 7011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7036,
											"end": 7038,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7031,
											"end": 7034,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7027,
											"end": 7039,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7020,
											"end": 7039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7020,
											"end": 7039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6679,
											"end": 7045,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6679,
											"end": 7045,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6679,
											"end": 7045,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6679,
											"end": 7045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7051,
											"end": 7470,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 7051,
											"end": 7470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7217,
											"end": 7221,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7255,
											"end": 7257,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7244,
											"end": 7253,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7240,
											"end": 7258,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7232,
											"end": 7258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7232,
											"end": 7258,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7304,
											"end": 7313,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7302,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7314,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7290,
											"end": 7291,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7279,
											"end": 7288,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7275,
											"end": 7292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7268,
											"end": 7315,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7332,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 7458,
											"end": 7462,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7332,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 7332,
											"end": 7463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7332,
											"end": 7463,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 7332,
											"end": 7463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7324,
											"end": 7463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7324,
											"end": 7463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7051,
											"end": 7470,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7051,
											"end": 7470,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7051,
											"end": 7470,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7051,
											"end": 7470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7918,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 7476,
											"end": 7918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7625,
											"end": 7629,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7663,
											"end": 7665,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7652,
											"end": 7661,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7648,
											"end": 7666,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7640,
											"end": 7666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7640,
											"end": 7666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7676,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 7744,
											"end": 7745,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7733,
											"end": 7742,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7729,
											"end": 7746,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7676,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 7676,
											"end": 7747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7676,
											"end": 7747,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 7676,
											"end": 7747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 7825,
											"end": 7827,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7814,
											"end": 7823,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7810,
											"end": 7828,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7807,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 7757,
											"end": 7829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7829,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 7757,
											"end": 7829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7839,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 7907,
											"end": 7909,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7896,
											"end": 7905,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7883,
											"end": 7889,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7839,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 7839,
											"end": 7911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7839,
											"end": 7911,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 7839,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7918,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7918,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7924,
											"end": 8086,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 7924,
											"end": 8086,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8064,
											"end": 8078,
											"name": "PUSH",
											"source": 4,
											"value": "5A65726F206465706F7369740000000000000000000000000000000000000000"
										},
										{
											"begin": 8060,
											"end": 8061,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8052,
											"end": 8058,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8048,
											"end": 8062,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8041,
											"end": 8079,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7924,
											"end": 8086,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7924,
											"end": 8086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8458,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 8092,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8234,
											"end": 8237,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8255,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 8319,
											"end": 8321,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 8314,
											"end": 8317,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8255,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 8255,
											"end": 8322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8255,
											"end": 8322,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 8255,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8248,
											"end": 8322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8248,
											"end": 8322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8331,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 8420,
											"end": 8423,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8331,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 8331,
											"end": 8424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8331,
											"end": 8424,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 8331,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8449,
											"end": 8451,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8444,
											"end": 8447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8440,
											"end": 8452,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8433,
											"end": 8452,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8433,
											"end": 8452,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8458,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8464,
											"end": 8883,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 8464,
											"end": 8883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8630,
											"end": 8634,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8668,
											"end": 8670,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8657,
											"end": 8666,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8653,
											"end": 8671,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8645,
											"end": 8671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8645,
											"end": 8671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8717,
											"end": 8726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8711,
											"end": 8715,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8727,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 8704,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8692,
											"end": 8701,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8688,
											"end": 8705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8681,
											"end": 8728,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8745,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 8871,
											"end": 8875,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8745,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 8745,
											"end": 8876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8745,
											"end": 8876,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 8745,
											"end": 8876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8737,
											"end": 8876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8737,
											"end": 8876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8464,
											"end": 8883,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8464,
											"end": 8883,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8464,
											"end": 8883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8464,
											"end": 8883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8889,
											"end": 9080,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 8889,
											"end": 9080,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8929,
											"end": 8932,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8948,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 8966,
											"end": 8967,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8948,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 8948,
											"end": 8968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8948,
											"end": 8968,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 8948,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8943,
											"end": 8968,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8943,
											"end": 8968,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8982,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8982,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 8982,
											"end": 9002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8982,
											"end": 9002,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 8982,
											"end": 9002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8977,
											"end": 9002,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8977,
											"end": 9002,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9025,
											"end": 9026,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9022,
											"end": 9023,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9018,
											"end": 9027,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9011,
											"end": 9027,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9011,
											"end": 9027,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9046,
											"end": 9049,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9043,
											"end": 9044,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9040,
											"end": 9050,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 9037,
											"end": 9073,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9037,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 9037,
											"end": 9073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 9053,
											"end": 9071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9037,
											"end": 9073,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 9037,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8889,
											"end": 9080,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8889,
											"end": 9080,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8889,
											"end": 9080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8889,
											"end": 9080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8889,
											"end": 9080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9086,
											"end": 9496,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 9086,
											"end": 9496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9126,
											"end": 9133,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9149,
											"end": 9169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 9167,
											"end": 9168,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9149,
											"end": 9169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 9149,
											"end": 9169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9149,
											"end": 9169,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 9149,
											"end": 9169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9144,
											"end": 9169,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9144,
											"end": 9169,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9183,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 9201,
											"end": 9202,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9183,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 9183,
											"end": 9203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9183,
											"end": 9203,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 9183,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9178,
											"end": 9203,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9178,
											"end": 9203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9238,
											"end": 9239,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9235,
											"end": 9236,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9290,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 9278,
											"end": 9289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9290,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 9260,
											"end": 9290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9290,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 9260,
											"end": 9290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9249,
											"end": 9290,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9249,
											"end": 9290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9439,
											"end": 9440,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9430,
											"end": 9437,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9426,
											"end": 9441,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9424,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9420,
											"end": 9442,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9400,
											"end": 9401,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9393,
											"end": 9402,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9456,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9350,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 9350,
											"end": 9489,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9469,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 9469,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 9469,
											"end": 9487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9469,
											"end": 9487,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 9469,
											"end": 9487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9350,
											"end": 9489,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 9350,
											"end": 9489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9134,
											"end": 9496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9086,
											"end": 9496,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9086,
											"end": 9496,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9086,
											"end": 9496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9086,
											"end": 9496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9086,
											"end": 9496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9502,
											"end": 9682,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 9502,
											"end": 9682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9550,
											"end": 9627,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9547,
											"end": 9548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9628,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9647,
											"end": 9651,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 9644,
											"end": 9645,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9637,
											"end": 9652,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9675,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9668,
											"end": 9669,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9661,
											"end": 9676,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9873,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 9688,
											"end": 9873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9729,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9745,
											"end": 9765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 9763,
											"end": 9764,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9745,
											"end": 9765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 9745,
											"end": 9765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9745,
											"end": 9765,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 9745,
											"end": 9765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9740,
											"end": 9765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9740,
											"end": 9765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9779,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 9797,
											"end": 9798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9779,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 9779,
											"end": 9799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9779,
											"end": 9799,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 9779,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9774,
											"end": 9799,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9774,
											"end": 9799,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9818,
											"end": 9819,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9808,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 9808,
											"end": 9843,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9823,
											"end": 9841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 9823,
											"end": 9841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 9823,
											"end": 9841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9823,
											"end": 9841,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 9823,
											"end": 9841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9808,
											"end": 9843,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 9808,
											"end": 9843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9862,
											"end": 9863,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9858,
											"end": 9867,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 9853,
											"end": 9867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9853,
											"end": 9867,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9873,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9873,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"pool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claimRewards()": "372500ab",
							"deposit(uint256)": "b6b55f25",
							"fundRewards(uint256)": "93707a19",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardRate()": "7b0a47ee",
							"rewardToken()": "f7c618c1",
							"setRewardRate(uint256)": "9e447fc6",
							"stakeToken()": "51ed6a30",
							"stakers(address)": "9168ae72",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fundRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"pool.sol\":\"RewardPool\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"pool.sol\":{\"keccak256\":\"0xab67111581fa2a483b177c209f88f100285967b0b09f3cb28e636c03146e0250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a66b0937b0d7b6e154d6f12ee8c580a5e0c95dfb8d1b990c79bf718e4d9481a\",\"dweb:/ipfs/QmTLMYC3CiLfB3yFgYauoXvNmqD9CScZQw4HkYL48pXZtk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "pool.sol:RewardPool",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 264,
								"contract": "pool.sol:RewardPool",
								"label": "stakeToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 267,
								"contract": "pool.sol:RewardPool",
								"label": "rewardToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 270,
								"contract": "pool.sol:RewardPool",
								"label": "rewardRate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 282,
								"contract": "pool.sol:RewardPool",
								"label": "stakers",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(Staker)277_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)225": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Staker)277_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct RewardPool.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)277_storage"
							},
							"t_struct(Staker)277_storage": {
								"encoding": "inplace",
								"label": "struct RewardPool.Staker",
								"members": [
									{
										"astId": 272,
										"contract": "pool.sol:RewardPool",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 274,
										"contract": "pool.sol:RewardPool",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 276,
										"contract": "pool.sol:RewardPool",
										"label": "lastUpdate",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "215:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "397:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "406:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "428:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "448:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:1"
									},
									"src": "391:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "628:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "637:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "660:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "685:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:1"
									},
									"src": "622:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "822:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:1"
									},
									"scope": 225,
									"src": "776:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "932:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "972:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:1"
									},
									"scope": 225,
									"src": "913:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1223:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1235:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1268:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:1"
									},
									"scope": 225,
									"src": "1205:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1568:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1583:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1623:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:1"
									},
									"scope": 225,
									"src": "1549:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2327:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2344:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2377:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:1"
									},
									"scope": 225,
									"src": "2310:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2713:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2727:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2739:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2772:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:1"
									},
									"scope": 225,
									"src": "2691:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "205:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2675:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"pool.sol": {
				"ast": {
					"absolutePath": "pool.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"IERC20": [
							225
						],
						"Ownable": [
							147
						],
						"RewardPool": [
							506
						]
					},
					"id": 507,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 507,
							"sourceUnit": 226,
							"src": "63:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 507,
							"sourceUnit": 148,
							"src": "121:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 260,
										"name": "Ownable",
										"nameLocations": [
											"200:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "200:7:3"
									},
									"id": 261,
									"nodeType": "InheritanceSpecifier",
									"src": "200:7:3"
								}
							],
							"canonicalName": "RewardPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 506,
							"linearizedBaseContracts": [
								506,
								147,
								255
							],
							"name": "RewardPool",
							"nameLocation": "186:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "51ed6a30",
									"id": 264,
									"mutability": "mutable",
									"name": "stakeToken",
									"nameLocation": "229:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 506,
									"src": "215:24:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 263,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 262,
											"name": "IERC20",
											"nameLocations": [
												"215:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "215:6:3"
										},
										"referencedDeclaration": 225,
										"src": "215:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 267,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "260:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 506,
									"src": "246:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 266,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 265,
											"name": "IERC20",
											"nameLocations": [
												"246:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "246:6:3"
										},
										"referencedDeclaration": 225,
										"src": "246:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 270,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "295:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 506,
									"src": "280:32:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 268,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "280:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 269,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "308:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "RewardPool.Staker",
									"id": 277,
									"members": [
										{
											"constant": false,
											"id": 272,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "395:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 277,
											"src": "387:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 271,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "387:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 274,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "421:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 277,
											"src": "413:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 273,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "413:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 276,
											"mutability": "mutable",
											"name": "lastUpdate",
											"nameLocation": "450:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 277,
											"src": "442:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 275,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "442:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "369:6:3",
									"nodeType": "StructDefinition",
									"scope": 506,
									"src": "362:106:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9168ae72",
									"id": 282,
									"mutability": "mutable",
									"name": "stakers",
									"nameLocation": "510:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 506,
									"src": "476:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$277_storage_$",
										"typeString": "mapping(address => struct RewardPool.Staker)"
									},
									"typeName": {
										"id": 281,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 278,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "484:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "476:26:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$277_storage_$",
											"typeString": "mapping(address => struct RewardPool.Staker)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 280,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 279,
												"name": "Staker",
												"nameLocations": [
													"495:6:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "495:6:3"
											},
											"referencedDeclaration": 277,
											"src": "495:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$277_storage_ptr",
												"typeString": "struct RewardPool.Staker"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "601:96:3",
										"statements": [
											{
												"expression": {
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 293,
														"name": "stakeToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "612:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 295,
																"name": "_stakeToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "632:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 294,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "625:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "625:19:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "612:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "612:32:3"
											},
											{
												"expression": {
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "655:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 301,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "676:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 300,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "669:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "669:20:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "655:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "655:34:3"
											}
										]
									},
									"id": 306,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 289,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "589:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "593:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "589:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 291,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 288,
												"name": "Ownable",
												"nameLocations": [
													"581:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "581:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "581:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "_stakeToken",
												"nameLocation": "546:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "538:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "567:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "559:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:43:3"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "601:0:3"
									},
									"scope": 506,
									"src": "526:171:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "747:208:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "766:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "775:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "766:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f206465706f736974",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "778:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f",
																"typeString": "literal_string \"Zero deposit\""
															},
															"value": "Zero deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f",
																"typeString": "literal_string \"Zero deposit\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "758:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "758:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "758:35:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 319,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "819:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "823:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "819:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 318,
														"name": "_updateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "804:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "804:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "804:26:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 326,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "865:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "869:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "865:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 330,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "885:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_RewardPool_$506",
																		"typeString": "contract RewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_RewardPool_$506",
																		"typeString": "contract RewardPool"
																	}
																],
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "877:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 328,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "877:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 332,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "892:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 323,
															"name": "stakeToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "841:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "852:12:3",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 224,
														"src": "841:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "841:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "841:58:3"
											},
											{
												"expression": {
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 335,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "910:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$277_storage_$",
																	"typeString": "mapping(address => struct RewardPool.Staker storage ref)"
																}
															},
															"id": 338,
															"indexExpression": {
																"expression": {
																	"id": 336,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "918:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "922:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "918:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "910:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$277_storage",
																"typeString": "struct RewardPool.Staker storage ref"
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "930:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 272,
														"src": "910:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 340,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "941:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "910:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "910:37:3"
											}
										]
									},
									"functionSelector": "b6b55f25",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "714:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "730:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "722:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:16:3"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "747:0:3"
									},
									"scope": 506,
									"src": "705:250:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "1006:221:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 350,
																		"name": "stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "1025:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$277_storage_$",
																			"typeString": "mapping(address => struct RewardPool.Staker storage ref)"
																		}
																	},
																	"id": 353,
																	"indexExpression": {
																		"expression": {
																			"id": 351,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1033:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1037:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1033:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1025:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$277_storage",
																		"typeString": "struct RewardPool.Staker storage ref"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1045:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 272,
																"src": "1025:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 355,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "1056:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1025:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768207374616b6564",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1064:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76",
																"typeString": "literal_string \"Not enough staked\""
															},
															"value": "Not enough staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76",
																"typeString": "literal_string \"Not enough staked\""
															}
														],
														"id": 349,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1017:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1017:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "1017:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 361,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1110:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1114:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1110:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 360,
														"name": "_updateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "1095:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1095:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "1095:26:3"
											},
											{
												"expression": {
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 365,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "1132:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$277_storage_$",
																	"typeString": "mapping(address => struct RewardPool.Staker storage ref)"
																}
															},
															"id": 368,
															"indexExpression": {
																"expression": {
																	"id": 366,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1140:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1144:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1140:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1132:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$277_storage",
																"typeString": "struct RewardPool.Staker storage ref"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1152:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 272,
														"src": "1132:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 370,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "1163:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1132:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "1132:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 376,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1200:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1204:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1200:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "1212:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 373,
															"name": "stakeToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "1180:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1191:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "1180:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1180:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1180:39:3"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "972:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "989:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "981:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "980:16:3"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:0:3"
									},
									"scope": 506,
									"src": "963:264:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "1268:243:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 386,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1294:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1298:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1294:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 385,
														"name": "_updateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "1279:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1279:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "1279:26:3"
											},
											{
												"assignments": [
													391
												],
												"declarations": [
													{
														"constant": false,
														"id": 391,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "1324:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "1316:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 390,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1316:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 397,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 392,
															"name": "stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1333:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$277_storage_$",
																"typeString": "mapping(address => struct RewardPool.Staker storage ref)"
															}
														},
														"id": 395,
														"indexExpression": {
															"expression": {
																"id": 393,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1341:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1345:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1341:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1333:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$277_storage",
															"typeString": "struct RewardPool.Staker storage ref"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1353:10:3",
													"memberName": "rewardDebt",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 274,
													"src": "1333:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1316:47:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 399,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "1382:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1391:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1382:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2072657761726473",
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1394:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e",
																"typeString": "literal_string \"No rewards\""
															},
															"value": "No rewards"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e",
																"typeString": "literal_string \"No rewards\""
															}
														],
														"id": 398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1374:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1374:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "1374:33:3"
											},
											{
												"expression": {
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 405,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "1418:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$277_storage_$",
																	"typeString": "mapping(address => struct RewardPool.Staker storage ref)"
																}
															},
															"id": 408,
															"indexExpression": {
																"expression": {
																	"id": 406,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1426:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1430:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1426:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1418:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$277_storage",
																"typeString": "struct RewardPool.Staker storage ref"
															}
														},
														"id": 409,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1438:10:3",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 274,
														"src": "1418:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1451:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1418:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "1418:34:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 416,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1484:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1488:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1484:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 418,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "1496:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 413,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "1463:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1475:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "1463:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1463:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "1463:40:3"
											}
										]
									},
									"functionSelector": "372500ab",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "1244:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1256:2:3"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1268:0:3"
									},
									"scope": 506,
									"src": "1235:276:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "1566:309:3",
										"statements": [
											{
												"assignments": [
													429
												],
												"declarations": [
													{
														"constant": false,
														"id": 429,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "1592:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "1577:16:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$277_storage_ptr",
															"typeString": "struct RewardPool.Staker"
														},
														"typeName": {
															"id": 428,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 427,
																"name": "Staker",
																"nameLocations": [
																	"1577:6:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 277,
																"src": "1577:6:3"
															},
															"referencedDeclaration": 277,
															"src": "1577:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$277_storage_ptr",
																"typeString": "struct RewardPool.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 433,
												"initialValue": {
													"baseExpression": {
														"id": 430,
														"name": "stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "1596:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$277_storage_$",
															"typeString": "mapping(address => struct RewardPool.Staker storage ref)"
														}
													},
													"id": 432,
													"indexExpression": {
														"id": 431,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1604:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1596:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$277_storage",
														"typeString": "struct RewardPool.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1577:32:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 434,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1624:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$277_storage_ptr",
																"typeString": "struct RewardPool.Staker storage pointer"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1626:10:3",
														"memberName": "lastUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 276,
														"src": "1624:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1639:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1624:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 464,
												"nodeType": "IfStatement",
												"src": "1620:207:3",
												"trueBody": {
													"id": 463,
													"nodeType": "Block",
													"src": "1642:185:3",
													"statements": [
														{
															"assignments": [
																439
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 439,
																	"mutability": "mutable",
																	"name": "timeDiff",
																	"nameLocation": "1665:8:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 463,
																	"src": "1657:16:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 438,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1657:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 445,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 440,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1676:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1682:9:3",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1676:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 442,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1694:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$277_storage_ptr",
																			"typeString": "struct RewardPool.Staker storage pointer"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1696:10:3",
																	"memberName": "lastUpdate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 276,
																	"src": "1694:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1676:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1657:49:3"
														},
														{
															"assignments": [
																447
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 447,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "1729:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 463,
																	"src": "1721:14:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 446,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1721:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 456,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 448,
																			"name": "timeDiff",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "1738:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"expression": {
																				"id": 449,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 429,
																				"src": "1749:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$277_storage_ptr",
																					"typeString": "struct RewardPool.Staker storage pointer"
																				}
																			},
																			"id": 450,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1751:7:3",
																			"memberName": "balance",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 272,
																			"src": "1749:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1738:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 452,
																		"name": "rewardRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "1761:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1738:33:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1774:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "1738:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1721:57:3"
														},
														{
															"expression": {
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 457,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1793:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$277_storage_ptr",
																			"typeString": "struct RewardPool.Staker storage pointer"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1795:10:3",
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 274,
																	"src": "1793:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 460,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "1809:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1793:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 462,
															"nodeType": "ExpressionStatement",
															"src": "1793:22:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 465,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1837:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$277_storage_ptr",
																"typeString": "struct RewardPool.Staker storage pointer"
															}
														},
														"id": 467,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1839:10:3",
														"memberName": "lastUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 276,
														"src": "1837:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 468,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1852:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1858:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1852:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1837:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "1837:30:3"
											}
										]
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateRewards",
									"nameLocation": "1528:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1551:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "1543:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1542:14:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1566:0:3"
									},
									"scope": 506,
									"src": "1519:356:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "1939:78:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 483,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1975:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1979:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1975:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 487,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1995:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_RewardPool_$506",
																		"typeString": "contract RewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_RewardPool_$506",
																		"typeString": "contract RewardPool"
																	}
																],
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1987:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 485,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1987:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1987:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "2002:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 480,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "1950:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1962:12:3",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 224,
														"src": "1950:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1950:59:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "1950:59:3"
											}
										]
									},
									"functionSelector": "93707a19",
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 478,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 477,
												"name": "onlyOwner",
												"nameLocations": [
													"1929:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1929:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1929:9:3"
										}
									],
									"name": "fundRewards",
									"nameLocation": "1892:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1912:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1904:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1904:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1903:16:3"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1939:0:3"
									},
									"scope": 506,
									"src": "1883:134:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "2082:37:3",
										"statements": [
											{
												"expression": {
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 500,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "2093:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 501,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "2106:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2093:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "2093:18:3"
											}
										]
									},
									"functionSelector": "9e447fc6",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 498,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 497,
												"name": "onlyOwner",
												"nameLocations": [
													"2072:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2072:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2072:9:3"
										}
									],
									"name": "setRewardRate",
									"nameLocation": "2034:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "_rate",
												"nameLocation": "2056:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "2048:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2047:15:3"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:0:3"
									},
									"scope": 506,
									"src": "2025:94:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 507,
							"src": "177:1945:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "35:2089:3"
				},
				"id": 3
			}
		}
	}
}